{"version":3,"sources":["../../../src/hooks/useAdaptivityHasPointer.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasPointer(deferDetect?: true): undefined | boolean; // prettier-ignore\nexport function useAdaptivityHasPointer(deferDetect?: false): boolean;\nexport function useAdaptivityHasPointer(deferDetect = true): undefined | boolean {\n  const { hasPointer: hasPointerContext } = React.useContext(AdaptivityContext);\n\n  const needTwoPassRendering = deferDetect || hasPointerContext === undefined;\n\n  const isClient = useIsClient(!needTwoPassRendering);\n  if (!isClient || hasPointerContext !== undefined) {\n    return hasPointerContext;\n  }\n\n  return hasPointerLib;\n}\n"],"names":["useAdaptivityHasPointer","deferDetect","React","useContext","AdaptivityContext","hasPointer","hasPointerContext","needTwoPassRendering","undefined","isClient","useIsClient","hasPointerLib"],"mappings":";;;;+BAagBA;;;eAAAA;;;;+DAbO;oBACmB;iCACR;2BACN;AAUrB,SAASA;QAAwBC,cAAAA,iEAAc;IACpD,IAA0CC,oBAAAA,OAAMC,UAAU,CAACC,oCAAiB,GAApEC,AAAYC,oBAAsBJ,kBAAlCG;IAER,IAAME,uBAAuBN,eAAeK,sBAAsBE;IAElE,IAAMC,WAAWC,IAAAA,wBAAW,EAAC,CAACH;IAC9B,IAAI,CAACE,YAAYH,sBAAsBE,WAAW;QAChD,OAAOF;IACT;IAEA,OAAOK,cAAa;AACtB"}