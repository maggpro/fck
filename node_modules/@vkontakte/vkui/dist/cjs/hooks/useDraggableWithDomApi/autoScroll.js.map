{"version":3,"sources":["../../../../src/hooks/useDraggableWithDomApi/autoScroll.ts"],"sourcesContent":["import { getNodeScroll, getScrollHeight, getScrollRect } from '../../lib/dom';\nimport { rafSchd } from '../../lib/rafSchd';\n\nconst SCROLL_SPEED = 10;\nexport const EDGE_SIZE = 50;\nexport const OUTBOX_OFFSET = -30;\n\nexport const getAutoScrollingData = (clientY: number, scrollEl: Element | Window) => {\n  const scrollTop = Math.floor(getNodeScroll(scrollEl).scrollTop);\n\n  const { relative, edges } = getScrollRect(scrollEl);\n  const viewportHeight = relative.height;\n  const documentHeight = getScrollHeight(scrollEl);\n  const maxScrollY = documentHeight - viewportHeight;\n  const canScrollUp = scrollTop > 0;\n  const canScrollDown = scrollTop < maxScrollY;\n\n  const [edgeTop, edgeBottom] = edges.y;\n  const topDistance = clientY - edgeTop;\n  const bottomDistance = edgeBottom - clientY;\n  const isInTopEdge = topDistance <= EDGE_SIZE;\n  const isInBottomEdge = bottomDistance <= EDGE_SIZE;\n\n  const result = {\n    shouldScrolling:\n      (canScrollUp && isInTopEdge && topDistance >= OUTBOX_OFFSET) ||\n      (canScrollDown && isInBottomEdge && bottomDistance >= OUTBOX_OFFSET),\n    y: 0,\n  };\n\n  // Inspired by https://github.com/SortableJS/Sortable/issues/1907#issuecomment-1495403785\n  if (isInTopEdge) {\n    result.y = -1 * ((EDGE_SIZE - topDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  } else if (isInBottomEdge) {\n    result.y = ((EDGE_SIZE - bottomDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  }\n\n  return result;\n};\n\nexport type AutoScrollingDataFn = () => { shouldScrolling: boolean; y: number };\n\nexport const createAutoScrollController = (scrollEl: Element | Window) => {\n  let isRunning = false;\n  const scheduledScroll = rafSchd(scroll);\n\n  function scroll(fn: AutoScrollingDataFn) {\n    const { shouldScrolling, y } = fn();\n    if (shouldScrolling) {\n      isRunning = true;\n      scrollEl.scrollBy(0, y);\n      scheduledScroll(fn);\n    } else {\n      isRunning = false;\n      scheduledScroll.cancel();\n    }\n  }\n\n  const tryAutoScroll = (fn: AutoScrollingDataFn) => {\n    scheduledScroll(fn);\n  };\n\n  const stop = () => {\n    isRunning = false;\n    scheduledScroll.cancel();\n  };\n\n  return {\n    tryAutoScroll,\n    stop,\n    get isRunning() {\n      return isRunning;\n    },\n  };\n};\n"],"names":["EDGE_SIZE","OUTBOX_OFFSET","createAutoScrollController","getAutoScrollingData","SCROLL_SPEED","clientY","scrollEl","scrollTop","Math","floor","getNodeScroll","getScrollRect","relative","edges","viewportHeight","height","documentHeight","getScrollHeight","maxScrollY","canScrollUp","canScrollDown","y","edgeTop","edgeBottom","topDistance","bottomDistance","isInTopEdge","isInBottomEdge","result","shouldScrolling","scroll","fn","isRunning","scrollBy","scheduledScroll","cancel","rafSchd","tryAutoScroll","stop"],"mappings":";;;;;;;;;;;IAIaA,SAAS;eAATA;;IACAC,aAAa;eAAbA;;IAqCAC,0BAA0B;eAA1BA;;IAnCAC,oBAAoB;eAApBA;;;;mBAPiD;uBACtC;AAExB,IAAMC,eAAe;AACd,IAAMJ,YAAY;AAClB,IAAMC,gBAAgB,CAAC;AAEvB,IAAME,uBAAuB,SAACE,SAAiBC;IACpD,IAAMC,YAAYC,KAAKC,KAAK,CAACC,IAAAA,kBAAa,EAACJ,UAAUC,SAAS;IAE9D,IAA4BI,iBAAAA,IAAAA,kBAAa,EAACL,WAAlCM,WAAoBD,eAApBC,UAAUC,QAAUF,eAAVE;IAClB,IAAMC,iBAAiBF,SAASG,MAAM;IACtC,IAAMC,iBAAiBC,IAAAA,oBAAe,EAACX;IACvC,IAAMY,aAAaF,iBAAiBF;IACpC,IAAMK,cAAcZ,YAAY;IAChC,IAAMa,gBAAgBb,YAAYW;IAElC,IAA8BL,8BAAAA,MAAMQ,CAAC,MAA9BC,UAAuBT,aAAdU,aAAcV;IAC9B,IAAMW,cAAcnB,UAAUiB;IAC9B,IAAMG,iBAAiBF,aAAalB;IACpC,IAAMqB,cAAcF,eAAexB;IACnC,IAAM2B,iBAAiBF,kBAAkBzB;IAEzC,IAAM4B,SAAS;QACbC,iBACE,AAACV,eAAeO,eAAeF,eAAevB,iBAC7CmB,iBAAiBO,kBAAkBF,kBAAkBxB;QACxDoB,GAAG;IACL;IAEA,yFAAyF;IACzF,IAAIK,aAAa;QACfE,OAAOP,CAAC,GAAG,CAAC,IAAK,CAAA,AAACrB,CAAAA,YAAYwB,WAAU,IAAKxB,SAAQ,IAAKI;IAC5D,OAAO,IAAIuB,gBAAgB;QACzBC,OAAOP,CAAC,GAAG,AAAErB,CAAAA,YAAYyB,cAAa,IAAKzB,YAAaI;IAC1D;IAEA,OAAOwB;AACT;AAIO,IAAM1B,6BAA6B,SAACI;QAIhCwB,SAAT,SAASA,OAAOC,EAAuB;QACrC,IAA+BA,MAAAA,MAAvBF,kBAAuBE,IAAvBF,iBAAiBR,IAAMU,IAANV;QACzB,IAAIQ,iBAAiB;YACnBG,YAAY;YACZ1B,SAAS2B,QAAQ,CAAC,GAAGZ;YACrBa,gBAAgBH;QAClB,OAAO;YACLC,YAAY;YACZE,gBAAgBC,MAAM;QACxB;IACF;IAbA,IAAIH,YAAY;IAChB,IAAME,kBAAkBE,IAAAA,gBAAO,EAACN;IAchC,IAAMO,gBAAgB,SAACN;QACrBG,gBAAgBH;IAClB;IAEA,IAAMO,OAAO;QACXN,YAAY;QACZE,gBAAgBC,MAAM;IACxB;IAEA,OAAO;QACLE,eAAAA;QACAC,MAAAA;QACA,IAAIN,aAAY;YACd,OAAOA;QACT;IACF;AACF"}