{"version":3,"sources":["../../../src/hooks/useAdaptivityWithJSMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { canUseDOM, hasHover as hasHoverLib, hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport {\n  AdaptivityContext,\n  type AdaptivityProps as BaseAdaptivityProps,\n} from '../components/AdaptivityProvider/AdaptivityContext';\nimport { getOrDefault } from '../helpers/getOrDefault';\nimport {\n  getSizeX,\n  getSizeY,\n  getViewHeightByMediaQueries,\n  getViewWidthByMediaQueries,\n  tryToCheckIsDesktop,\n} from '../lib/adaptivity';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\nimport { useMediaQueries } from './useMediaQueries';\nimport { usePlatform } from './usePlatform';\n\nexport interface UseAdaptivityWithJSMediaQueries extends Required<BaseAdaptivityProps> {\n  isDesktop: boolean;\n}\n\n/**\n * Высчитывает и возвращает параметры адаптивности при изменении вьюпорта.\n *\n * Берёт в приоритет значения из `AdaptivityContext`.\n *\n * > ⚠ SSR\n * >\n * > Во избежания ошибок при гидратации, не используйте данный хук, если есть вероятность, что компонент будет отрендерен\n * > на стороне сервера.\n * >\n * > Лучше всего использовать для всплывающих окон, т.к. они вызываются только после загрузки\n * > страницы либо пользователем, либо программно.\n */\nexport const useAdaptivityWithJSMediaQueries = (): UseAdaptivityWithJSMediaQueries => {\n  if (!canUseDOM) {\n    console.error(`[useAdaptivityWithJSMediaQueries] Похоже, вы пытаетесь использовать хук вне браузера.\n\nПостарайтесь этого избегать, чтобы не было ошибок при гидратации: при SSR нет информации о размерах экрана.\n\nИспользуйте CSS Media Query или библиотеку по типу https://github.com/artsy/fresnel.`);\n  }\n\n  const {\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    hasPointer: hasPointerContext,\n    hasHover: hasHoverContext,\n  } = React.useContext(AdaptivityContext);\n\n  const platform = usePlatform();\n  const mediaQueries = useMediaQueries();\n\n  const [[viewWidthLocal, viewHeightLocal], setViewSizeLocal] = React.useState(() => [\n    getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries)),\n    getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries)),\n  ]);\n\n  const adaptivityProps = React.useMemo(() => {\n    const hasPointer = getOrDefault(hasPointerContext, hasPointerLib);\n    const hasHover = getOrDefault(hasHoverContext, hasHoverLib);\n    const viewWidth = getOrDefault(viewWidthContext, viewWidthLocal);\n    const viewHeight = getOrDefault(viewHeightContext, viewHeightLocal);\n    const sizeX = getOrDefault(sizeXContext, getSizeX(viewWidth));\n    const sizeY = getOrDefault(sizeYContext, getSizeY(viewWidth, viewHeight, hasPointer));\n    const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n    return {\n      viewWidth,\n      viewHeight,\n      sizeX,\n      sizeY,\n      hasPointer,\n      hasHover,\n      isDesktop,\n    };\n  }, [\n    viewWidthLocal,\n    viewHeightLocal,\n    viewWidthContext,\n    viewHeightContext,\n    sizeXContext,\n    sizeYContext,\n    hasPointerContext,\n    hasHoverContext,\n    platform,\n  ]);\n\n  React.useEffect(() => {\n    const handleMediaQuery = () => {\n      setViewSizeLocal((prevSizeLocal) => {\n        const newViewWidthLocal = getOrDefault(\n          viewWidthContext,\n          getViewWidthByMediaQueries(mediaQueries),\n        );\n        const newViewHeightLocal = getOrDefault(\n          viewHeightContext,\n          getViewHeightByMediaQueries(mediaQueries),\n        );\n\n        const [prevViewWidthLocal, prevViewHeightLocal] = prevSizeLocal;\n\n        if (\n          prevViewWidthLocal !== newViewWidthLocal ||\n          prevViewHeightLocal !== newViewHeightLocal\n        ) {\n          return [newViewWidthLocal, newViewHeightLocal];\n        }\n\n        return prevSizeLocal;\n      });\n    };\n\n    if (!viewWidthContext) {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n      ].forEach((matchMediaListener) =>\n        matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    if (!viewHeightContext) {\n      [mediaQueries.mediumHeight, mediaQueries.mobileLandscapeHeight].forEach(\n        (matchMediaListener) => matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    return () => {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n        mediaQueries.mediumHeight,\n        mediaQueries.mobileLandscapeHeight,\n      ].forEach((matchMediaListener) =>\n        matchMediaListRemoveListener(matchMediaListener, handleMediaQuery),\n      );\n    };\n  }, [mediaQueries, viewWidthContext, viewHeightContext]);\n\n  return adaptivityProps;\n};\n"],"names":["useAdaptivityWithJSMediaQueries","canUseDOM","console","error","React","useContext","AdaptivityContext","viewWidth","viewWidthContext","viewHeight","viewHeightContext","sizeX","sizeXContext","sizeY","sizeYContext","hasPointer","hasPointerContext","hasHover","hasHoverContext","platform","usePlatform","mediaQueries","useMediaQueries","useState","getOrDefault","getViewWidthByMediaQueries","getViewHeightByMediaQueries","viewWidthLocal","viewHeightLocal","setViewSizeLocal","adaptivityProps","useMemo","hasPointerLib","hasHoverLib","getSizeX","getSizeY","isDesktop","tryToCheckIsDesktop","useEffect","handleMediaQuery","prevSizeLocal","newViewWidthLocal","newViewHeightLocal","prevViewWidthLocal","prevViewHeightLocal","desktopPlus","tablet","smallTablet","mobile","forEach","matchMediaListener","matchMediaListAddListener","mediumHeight","mobileLandscapeHeight","matchMediaListRemoveListener"],"mappings":"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"}