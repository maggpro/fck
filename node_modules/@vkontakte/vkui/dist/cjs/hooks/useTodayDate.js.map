{"version":3,"sources":["../../../src/hooks/useTodayDate.ts"],"sourcesContent":["import * as React from 'react';\nimport { getMillisecondsToTomorrow, isSameDay } from '../lib/date';\nimport { useDOM } from '../lib/dom';\n\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\nexport function useTodayDate(listenDayChangesForUpdate = false) {\n  const { document, window } = useDOM();\n  const [todayDate, setTodayDate] = React.useState(() => new Date());\n\n  React.useEffect(() => {\n    if (!listenDayChangesForUpdate || !document || !window) {\n      return;\n    }\n\n    let timeout: number | undefined = undefined;\n\n    const recalcTimeout = () => {\n      if (document.visibilityState === 'visible') {\n        const now = new Date();\n\n        const timeToDayChange = getMillisecondsToTomorrow(now);\n\n        // Удаляем старый таймаут\n        window.clearTimeout(timeout);\n\n        // Создаем новый таймаут\n        timeout = window.setTimeout(() => {\n          setTodayDate(now);\n        }, timeToDayChange);\n\n        // Если todayDate не обновился в таймаут - обновить при заходе на вкладку\n        if (!isSameDay(todayDate, now)) {\n          setTodayDate(now);\n        }\n      }\n    };\n\n    recalcTimeout();\n\n    // Создаем слушатель visibilitychange, чтобы предотвратить пропуск обновления стейта после заморозки вкладки\n    // Если человек ее долго не трогал или закрывал крышку ноута и тп\n    // https://developer.chrome.com/blog/page-lifecycle-api/\n    document.addEventListener('visibilitychange', recalcTimeout);\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('visibilitychange', recalcTimeout);\n    };\n  }, [document, listenDayChangesForUpdate, todayDate, window]);\n\n  return todayDate;\n}\n"],"names":["useTodayDate","listenDayChangesForUpdate","useDOM","document","window","React","useState","Date","todayDate","setTodayDate","useEffect","timeout","undefined","recalcTimeout","visibilityState","now","timeToDayChange","getMillisecondsToTomorrow","clearTimeout","setTimeout","isSameDay","addEventListener","removeEventListener"],"mappings":";;;;+BAagBA;;;eAAAA;;;;;+DAbO;oBAC8B;mBAC9B;AAWhB,SAASA;QAAaC,4BAAAA,iEAA4B;IACvD,IAA6BC,UAAAA,IAAAA,WAAM,KAA3BC,WAAqBD,QAArBC,UAAUC,SAAWF,QAAXE;IAClB,IAAkCC,qCAAAA,OAAMC,QAAQ,CAAC;eAAM,IAAIC;YAApDC,YAA2BH,oBAAhBI,eAAgBJ;IAElCA,OAAMK,SAAS,CAAC;QACd,IAAI,CAACT,6BAA6B,CAACE,YAAY,CAACC,QAAQ;YACtD;QACF;QAEA,IAAIO,UAA8BC;QAElC,IAAMC,gBAAgB;YACpB,IAAIV,SAASW,eAAe,KAAK,WAAW;gBAC1C,IAAMC,MAAM,IAAIR;gBAEhB,IAAMS,kBAAkBC,IAAAA,+BAAyB,EAACF;gBAElD,yBAAyB;gBACzBX,OAAOc,YAAY,CAACP;gBAEpB,wBAAwB;gBACxBA,UAAUP,OAAOe,UAAU,CAAC;oBAC1BV,aAAaM;gBACf,GAAGC;gBAEH,yEAAyE;gBACzE,IAAI,CAACI,IAAAA,eAAS,EAACZ,WAAWO,MAAM;oBAC9BN,aAAaM;gBACf;YACF;QACF;QAEAF;QAEA,4GAA4G;QAC5G,iEAAiE;QACjE,wDAAwD;QACxDV,SAASkB,gBAAgB,CAAC,oBAAoBR;QAE9C,OAAO;YACLT,OAAOc,YAAY,CAACP;YACpBR,SAASmB,mBAAmB,CAAC,oBAAoBT;QACnD;IACF,GAAG;QAACV;QAAUF;QAA2BO;QAAWJ;KAAO;IAE3D,OAAOI;AACT"}