{"version":3,"sources":["../../../../src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, isPrimitiveReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { getTitleFromChildren } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\nimport styles from './PanelHeaderButton.module.css';\n\nconst platformClassNames = {\n  ios: styles['PanelHeaderButton--ios'],\n  android: styles['PanelHeaderButton--android'],\n  vkcom: styles['PanelHeaderButton--vkcom'],\n};\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? '1' : '3'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === Platform.VKCOM ? undefined : '2'}>{children}</Text>;\n};\n\nconst warn = warnOnce('PanelHeaderButton');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = ({\n  children,\n  primary = false,\n  label,\n  className,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case Platform.IOS:\n      hoverMode = 'opacity';\n      activeMode = 'opacity';\n      break;\n    case Platform.VKCOM:\n      hoverMode = styles['PanelHeaderButton--hover'];\n      activeMode = styles['PanelHeaderButton--active'];\n      break;\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const hasAccessibleName = Boolean(\n      getTitleFromChildren(children) ||\n        getTitleFromChildren(label) ||\n        restProps['aria-label'] ||\n        restProps['aria-labelledby'],\n    );\n\n    if (!hasAccessibleName) {\n      warn(\n        'a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.',\n        'error',\n      );\n    }\n  }\n\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      {...restProps}\n      hoverMode={hoverMode}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      className={classNames(\n        'vkuiInternalPanelHeaderButton',\n        styles['PanelHeaderButton'],\n        platformClassNames.hasOwnProperty(platform)\n          ? platformClassNames[platform]\n          : platformClassNames.android,\n        isPrimitive && styles['PanelHeaderButton--primitive'],\n        !isPrimitive && !isPrimitiveLabel && styles['PanelHeaderButton--notPrimitive'],\n        className,\n      )}\n    >\n      {isPrimitive ? <ButtonTypography primary={primary}>{children}</ButtonTypography> : children}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary} className={styles['PanelHeaderButton__label']}>\n          {label}\n        </ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n"],"names":["PanelHeaderButton","platformClassNames","ios","android","vkcom","ButtonTypography","primary","children","platform","usePlatform","Platform","IOS","Title","Component","level","weight","Text","VKCOM","undefined","warn","warnOnce","label","className","restProps","isPrimitive","isPrimitiveReactNode","isPrimitiveLabel","hoverMode","activeMode","process","env","NODE_ENV","hasAccessibleName","Boolean","getTitleFromChildren","Tappable","href","activeEffectDelay","classNames","hasOwnProperty"],"mappings":";;;;+BA6CaA;;;eAAAA;;;;;;;+DA7CU;oBAC0B;2BACrB;wBACH;qBACY;wBACZ;wBACe;oBACnB;qBACC;AAGtB,IAAMC,qBAAqB;IACzBC,GAAG;IACHC,OAAO;IACPC,KAAK;AACP;AAWA,IAAMC,mBAAmB;QAAGC,gBAAAA,SAASC,iBAAAA;IACnC,IAAMC,WAAWC,IAAAA,wBAAW;IAE5B,IAAID,aAAaE,kBAAQ,CAACC,GAAG,EAAE;QAC7B,qBACE,qBAACC,YAAK;YAACC,WAAU;YAAOC,OAAM;YAAIC,QAAQT,UAAU,MAAM;WACvDC;IAGP;IAEA,qBAAO,qBAACS,UAAI;QAACD,QAAQP,aAAaE,kBAAQ,CAACO,KAAK,GAAGC,YAAY;OAAMX;AACvE;AAEA,IAAMY,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,IAAMpB,oBAAoB;QAC/BO,kBAAAA,kCACAD,SAAAA,sCAAU,wBACVe,eAAAA,OACAC,mBAAAA,WACGC;QAJHhB;QACAD;QACAe;QACAC;;IAGA,IAAME,cAAcC,IAAAA,0BAAoB,EAAClB;IACzC,IAAMmB,mBAAmBD,IAAAA,0BAAoB,EAACJ;IAC9C,IAAMb,WAAWC,IAAAA,wBAAW;IAE5B,IAAIkB;IACJ,IAAIC;IAEJ,OAAQpB;QACN,KAAKE,kBAAQ,CAACC,GAAG;YACfgB,YAAY;YACZC,aAAa;YACb;QACF,KAAKlB,kBAAQ,CAACO,KAAK;YACjBU;YACAC;YACA;QACF;YACED,YAAY;YACZC,aAAa;IACjB;IAEA,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1C,IAAMC,oBAAoBC,QACxBC,IAAAA,2BAAoB,EAAC3B,aACnB2B,IAAAA,2BAAoB,EAACb,UACrBE,SAAS,CAAC,aAAa,IACvBA,SAAS,CAAC,kBAAkB;QAGhC,IAAI,CAACS,mBAAmB;YACtBb,KACE,sMACA;QAEJ;IACF;IAEA,qBACE,qBAACgB,kBAAQ;QACPtB,WAAWU,UAAUa,IAAI,GAAG,MAAM;OAC9Bb;QACJI,WAAWA;QACXU,mBAAmB;QACnBT,YAAYA;QACZN,WAAWgB,IAAAA,gBAAU,EACnB,0DAEArC,mBAAmBsC,cAAc,CAAC/B,YAC9BP,kBAAkB,CAACO,SAAS,GAC5BP,mBAAmBE,OAAO,EAC9BqB,mDACA,CAACA,eAAe,CAACE,2DACjBJ;QAGDE,4BAAc,qBAACnB;QAAiBC,SAASA;OAAUC,YAA+BA,UAClFmB,iCACC,qBAACrB;QAAiBC,SAASA;QAASgB,SAAS;OAC1CD,SAGHA;AAIR"}