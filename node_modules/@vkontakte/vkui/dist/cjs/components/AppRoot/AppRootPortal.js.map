{"version":3,"sources":["../../../../src/components/AppRoot/AppRootPortal.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useAppearance } from '../../hooks/useAppearance';\nimport { useIsClient } from '../../hooks/useIsClient';\nimport { isRefObject } from '../../lib/isRefObject';\nimport { HasChildren } from '../../types';\nimport { AppearanceProvider } from '../AppearanceProvider/AppearanceProvider';\nimport { AppRootContext } from './AppRootContext';\n\nexport interface AppRootPortalProps extends HasChildren {\n  className?: string;\n  forcePortal?: boolean;\n  /**\n   * Кастомный root-элемент портала.\n   * При передаче вместе с `forcePorta=true` игнорируется `portalRoot` и `disablePortal`\n   * из контекста `AppRoot`.\n   */\n  portalRoot?: HTMLElement | React.RefObject<HTMLElement> | null;\n}\n\nexport const AppRootPortal = ({\n  children,\n  className,\n  forcePortal: forcePortalProp,\n  portalRoot: portalRootProp = null,\n}: AppRootPortalProps) => {\n  const { portalRoot, mode, disablePortal } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  const isClient = useIsClient();\n  if (!isClient) {\n    return null;\n  }\n\n  const forcePortal = forcePortalProp ?? mode !== 'full';\n\n  const portalContainer = getPortalContainer(portalRootProp, portalRoot);\n\n  const ignoreDisablePortalFlagFromContext = portalRootProp && forcePortal;\n  const shouldUsePortal = ignoreDisablePortalFlagFromContext\n    ? true\n    : !disablePortal && portalContainer && forcePortal;\n\n  return shouldUsePortal && portalContainer ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalContainer,\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n\n/**\n * Получает из кастомного пропа `partialRootProp` и `partialRoot` контекста\n * контейнер-элемент для портала.\n * `partialRootProp` может быть ref элементом.\n *\n */\nfunction getPortalContainer(\n  portalRootProp?: HTMLElement | React.RefObject<HTMLElement> | null,\n  portalRoot?: HTMLElement | null,\n) {\n  if (!portalRootProp) {\n    return portalRoot;\n  }\n\n  return isRefObject(portalRootProp) ? portalRootProp.current : portalRootProp;\n}\n"],"names":["AppRootPortal","children","className","forcePortal","forcePortalProp","portalRootProp","portalRoot","React","useContext","AppRootContext","mode","disablePortal","appearance","useAppearance","isClient","useIsClient","portalContainer","getPortalContainer","ignoreDisablePortalFlagFromContext","shouldUsePortal","createPortal","AppearanceProvider","div","Fragment","isRefObject","current"],"mappings":";;;;+BAoBaA;;;eAAAA;;;;+DApBU;wBACM;6BACC;2BACF;2BACA;kCAEO;8BACJ;AAaxB,IAAMA,gBAAgB;QAC3BC,iBAAAA,UACAC,kBAAAA,WACAC,AAAaC,wBAAbD,aACYE,YAAZC,YAAYD,iBAAAA,iBAAiB,OAAjBA;IAEZ,IAA4CE,oBAAAA,OAAMC,UAAU,CAACC,8BAAc,GAAnEH,aAAoCC,kBAApCD,YAAYI,OAAwBH,kBAAxBG,MAAMC,gBAAkBJ,kBAAlBI;IAC1B,IAAMC,aAAaC,IAAAA,4BAAa;IAEhC,IAAMC,WAAWC,IAAAA,wBAAW;IAC5B,IAAI,CAACD,UAAU;QACb,OAAO;IACT;IAEA,IAAMX,cAAcC,4BAAAA,6BAAAA,kBAAmBM,SAAS;IAEhD,IAAMM,kBAAkBC,mBAAmBZ,gBAAgBC;IAE3D,IAAMY,qCAAqCb,kBAAkBF;IAC7D,IAAMgB,kBAAkBD,qCACpB,OACA,CAACP,iBAAiBK,mBAAmBb;IAEzC,OAAOgB,mBAAmBH,gCACxBI,IAAAA,sBAAY,gBACV,qBAACC,sCAAkB;QAACT,YAAYA;qBAC9B,qBAACU;QAAIpB,WAAWA;OAAYD,YAE9Be,iCAGF,qBAACT,OAAMgB,QAAQ,QAAEtB;AAErB;AAEA;;;;;CAKC,GACD,SAASgB,mBACPZ,cAAkE,EAClEC,UAA+B;IAE/B,IAAI,CAACD,gBAAgB;QACnB,OAAOC;IACT;IAEA,OAAOkB,IAAAA,wBAAW,EAACnB,kBAAkBA,eAAeoB,OAAO,GAAGpB;AAChE"}