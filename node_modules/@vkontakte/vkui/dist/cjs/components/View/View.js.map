{"version":3,"sources":["../../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const id = getNavId({ nav, id: restProps.id });\n  const scrolls = React.useRef(scrollsCache[id as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const swipeBackPrevented = React.useRef<boolean>(false);\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackShift = usePrevious(swipeBackShift);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    !configProvider.transitionMotionEnabled || !splitCol.animate || platform === Platform.VKCOM;\n  const iOSSwipeBackSimulationEnabled =\n    !disableAnimation &&\n    platform === Platform.IOS &&\n    configProvider.isWebView &&\n    Boolean(onSwipeBack);\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  const handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window!.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  const handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    swipeBackPrevented.current = false;\n\n    if (swipingBack) {\n      const speed = (swipeBackShift / event.duration) * 1000;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window!.innerWidth / 2) {\n        setSwipeBackResult(SwipeBackResults.success);\n      } else {\n        setSwipeBackResult(SwipeBackResults.fail);\n      }\n    }\n  };\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n      };\n    }\n\n    return {};\n  };\n\n  const calcPanelSwipeBackOverlayStyles = (panelId?: string): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isNext = panelId === swipeBackNextPanel;\n    if (!isNext) {\n      return {};\n    }\n\n    const calculatedOpacity = 1 - swipeBackShift / window.innerWidth;\n    const opacityOnSwipeEnd =\n      swipeBackResult === SwipeBackResults.success\n        ? 0\n        : swipeBackResult === SwipeBackResults.fail\n        ? 1\n        : null;\n\n    return {\n      display: 'block',\n      opacity: opacityOnSwipeEnd === null ? calculatedOpacity : opacityOnSwipeEnd,\n    };\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  React.useEffect(\n    function restoreScrollPositionWhenSwipeBackIsCancelled() {\n      // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n      const swipeBackCancelledInTheMiddleOfAction =\n        prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult;\n      const swipeBackCancelledByMovingPanelBackToInitialPoint =\n        prevSwipingBack && !swipingBack && prevSwipeBackShift === 0;\n\n      if (\n        (swipeBackCancelledInTheMiddleOfAction ||\n          swipeBackCancelledByMovingPanelBackToInitialPoint) &&\n        activePanel !== null\n      ) {\n        scroll?.scrollTo(0, scrolls.current[activePanel]);\n      }\n    },\n    [\n      prevSwipeBackResult,\n      swipeBackResult,\n      prevSwipingBack,\n      swipingBack,\n      prevSwipeBackShift,\n      activePanel,\n      scroll,\n    ],\n  );\n\n  return (\n    <NavViewIdContext.Provider value={id}>\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && animated && styles['View--animated'],\n          !disableAnimation && swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={\n          iOSSwipeBackSimulationEnabled\n            ? handleTouchMoveXForIOSSwipeBackSimulation\n            : platform === Platform.IOS\n            ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n            : undefined\n        }\n        onEnd={iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && styles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === SwipeBackResults.success &&\n                    styles['View__panel--swipe-back-success'],\n                  swipeBackResult === SwipeBackResults.fail &&\n                    styles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n                style={calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                {platform === Platform.IOS && (\n                  <div\n                    className={styles['View__panel-overlay']}\n                    style={calcPanelSwipeBackOverlayStyles(panelId)}\n                  />\n                )}\n                <div\n                  className={styles['View__panel-in']}\n                  style={{\n                    marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                  }}\n                >\n                  <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                    <NavTransitionProvider\n                      entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                    >\n                      {panel}\n                    </NavTransitionProvider>\n                  </NavTransitionDirectionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    </NavViewIdContext.Provider>\n  );\n};\n"],"names":["View","scrollsCache","SwipeBackResults","warn","warnOnce","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","id","getNavId","scrolls","React","useRef","afterTransition","noop","useEffect","current","panelNodes","useDOM","window","document","scroll","useScroll","configProvider","useConfigProvider","splitCol","useSplitCol","platform","usePlatform","useState","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","undefined","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipeBackPrevented","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","usePrevious","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackShift","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","Platform","VKCOM","iOSSwipeBackSimulationEnabled","IOS","isWebView","Boolean","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","useIsomorphicLayoutEffect","transitionEndHandler","e","animationName","waitTransitionFinish","useWaitTransitionFinish","animationFinishTimeout","useTimeout","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","event","getSwipeBackPredicates","startX","shiftX","innerWidth","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","handleTouchMoveXForIOSSwipeBackSimulation","swipeBackExcluded","swipedToOpposite","length","hasHorizontalScrollableElementWithScrolledToLeft","originalEvent","payload","blurActiveElement","getScroll","y","slice","handleTouchEndForIOSSwipeBackSimulation","speed","duration","calcPanelSwipeStyles","canUseDOM","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","transform","WebkitTransform","calcPanelSwipeBackOverlayStyles","calculatedOpacity","opacityOnSwipeEnd","display","opacity","firstLayerId","map","find","animationEvent","supported","set","restoreScrollPositionWhenSwipeBackIsCancelled","swipeBackCancelledInTheMiddleOfAction","swipeBackCancelledByMovingPanelBackToInitialPoint","NavViewIdContext","Provider","value","Touch","Component","classNames","onMoveX","onEnd","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","NavTransitionDirectionProvider","NavTransitionProvider","entering"],"mappings":";;;;;;;;;;;IAqEaA,IAAI;eAAJA;;IA7BFC,YAAY;eAAZA;;;;;;;;+DAxCY;oBACU;2BACL;2BACA;0BACD;uCACa;mBACa;wBAChB;wBACZ;6BACM;yCACW;wBACjB;6BAEC;qCACQ;4BACD;oCACK;6CACS;+BACnB;qBACM;qBAK3B;;UAGFC;;;GAAAA,qBAAAA;AAaE,IAAID,eAA6B,CAAC;AAwBzC,IAAME,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,IAAMJ,OAAO;QAClBK,AAAaC,yBAAbD,aACAE,iBAAAA,SACAC,aAAAA,KACAC,sBAAAA,cACAC,qBAAAA,aACAC,0BAAAA,kBACAC,AAAmBC,+BAAnBD,mBACAE,kBAAAA,UACAC,mBAAAA,WACGC;QATHX;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAE;QACAC;;IAGA,IAAME,KAAKC,IAAAA,kBAAQ,EAAC;QAAEV,KAAAA;QAAKS,IAAID,UAAUC,EAAE;IAAC;IAC5C,IAAME,UAAUC,OAAMC,MAAM,CAACpB,YAAY,CAACgB,GAAa,IAAI,CAAC;IAC5D,IAAMK,kBAAkBF,OAAMC,MAAM,CAACE,UAAI;IAEzCH,OAAMI,SAAS,CAAC;eAAM;YACpB,IAAIP,IAAI;gBACNhB,YAAY,CAACgB,GAAG,GAAGE,QAAQM,OAAO;YACpC;QACF;;IAEA,IAAMC,aAAaN,OAAMC,MAAM,CAA0C,CAAC;IAE1E,IAA6BM,UAAAA,IAAAA,WAAM,KAA3BC,SAAqBD,QAArBC,QAAQC,WAAaF,QAAbE;IAChB,IAAMC,SAASC,IAAAA,wBAAS;IACxB,IAAMC,iBAAiBC,IAAAA,wCAAiB;IACxC,IAAMC,WAAWC,IAAAA,4BAAW;IAC5B,IAAMC,WAAWC,IAAAA,wBAAW;IAE5B,IAAgCjB,qCAAAA,OAAMkB,QAAQ,CAAC,YAAxCC,WAAyBnB,oBAAfoB,cAAepB;IAEhC,IAA0CA,sCAAAA,OAAMkB,QAAQ,CAAC;QAAChC;KAAgB,OAAnEmC,gBAAmCrB,qBAApBsB,mBAAoBtB;IAC1C,IAAsCA,sCAAAA,OAAMkB,QAAQ,CAAgBhC,sBAA7DD,cAA+Be,qBAAlBuB,iBAAkBvB;IACtC,IAA4BA,sCAAAA,OAAMkB,QAAQ,CAAsBM,gBAAzDC,SAAqBzB,qBAAb0B,YAAa1B;IAC5B,IAAkCA,sCAAAA,OAAMkB,QAAQ,CAAgB,WAAzDS,YAA2B3B,qBAAhB4B,eAAgB5B;IAClC,IAAkCA,sCAAAA,OAAMkB,QAAQ,CAAgB,WAAzDW,YAA2B7B,qBAAhB8B,eAAgB9B;IAElC,IAAM+B,qBAAqB/B,OAAMC,MAAM,CAAU;IACjD,IAAsCD,sCAAAA,OAAMkB,QAAQ,CAAsBM,gBAAnEQ,cAA+BhC,qBAAlBiC,iBAAkBjC;IACtC,IAA8CA,sCAAAA,OAAMkB,QAAQ,CAAS,QAA9DgB,kBAAuClC,qBAAtBmC,qBAAsBnC;IAC9C,IAA4CA,sCAAAA,OAAMkB,QAAQ,CAAS,QAA5DkB,iBAAqCpC,qBAArBqC,oBAAqBrC;IAC5C,IAAoDA,sCAAAA,OAAMkB,QAAQ,CAAgB,WAA3EoB,qBAA6CtC,qBAAzBuC,wBAAyBvC;IACpD,IAAoDA,uCAAAA,OAAMkB,QAAQ,CAAgB,WAA3EsB,qBAA6CxC,sBAAzByC,wBAAyBzC;IACpD,IAA8CA,uCAAAA,OAAMkB,QAAQ,CAA0B,WAA/EwB,kBAAuC1C,sBAAtB2C,qBAAsB3C;IAE9C,IAAwCA,uCAAAA,OAAMkB,QAAQ,CAAC,YAAhD0B,eAAiC5C,sBAAnB6C,kBAAmB7C;IAExC,IAAM8C,kBAAkBC,IAAAA,wBAAW,EAAC7D;IACpC,IAAM8D,kBAAkBD,IAAAA,wBAAW,EAACf;IACpC,IAAMiB,mBAAmBF,IAAAA,wBAAW,EAACH;IACrC,IAAMM,sBAAsBH,IAAAA,wBAAW,EAACL;IACxC,IAAMS,qBAAqBJ,IAAAA,wBAAW,EAACX;IACvC,IAAMgB,yBAAyBL,IAAAA,wBAAW,EAACP;IAC3C,IAAMa,mBAAmBN,IAAAA,wBAAW,EAAC1D;IAErC,IAAMiE,SAAS,AAACtD,OAAMuD,QAAQ,CAACC,OAAO,CAAC9D,UAAmC+D,MAAM,CAC9E,SAACC;QACC,IAAMC,UAAU7D,IAAAA,kBAAQ,EAAC4D,MAAME,KAAK,EAAE7E;QAEtC,OACE,AAAC4E,YAAYnC,aAAaH,cAAcwC,QAAQ,CAACF,YACjDA,YAAYnB,sBACZmB,YAAYrB;IAEhB;IAGF,IAAMwB,mBACJ,CAAClD,eAAemD,uBAAuB,IAAI,CAACjD,SAASkD,OAAO,IAAIhD,aAAaiD,kBAAQ,CAACC,KAAK;IAC7F,IAAMC,gCACJ,CAACL,oBACD9C,aAAaiD,kBAAQ,CAACG,GAAG,IACzBxD,eAAeyD,SAAS,IACxBC,QAAQhF;IAEV,IAAMiF,YAAY,SAAC1E;QACjB,IAAIA,OAAO,MAAM;YACf,OAAO;QACT;QACA,OAAOS,WAAWD,OAAO,CAACR,GAAG;IAC/B;IAEA,IAAM2E,kBAAkBxE,OAAMyE,WAAW,CACvC,SAAC9C,WAAmB+C;QAClB,IAAIA,kBAAkB;YACpB3E,QAAQM,OAAO,CAACsB,UAAU,GAAG;QAC/B;QACAC,aAAa;QACbE,aAAa;QACbR,iBAAiB;YAACpC;SAAgB;QAClCqC,eAAerC;QACfkC,YAAY;QACZM,UAAUgD;QAEVxE,gBAAgBG,OAAO,GAAG;YACxBK,mBAAAA,6BAAAA,OAAQiE,QAAQ,CAAC,GAAGD,mBAAmB3E,QAAQM,OAAO,CAACnB,gBAAgB,GAAG;YAC1EG,gBACEA,aAAa;gBACXoC,QAAQiD;gBACRE,MAAMjD;gBACNkD,IAAI3F;YACN;QACJ;IACF,GACA;QAACA;QAAiBG;QAAcqB;KAAO;IAGzCoE,IAAAA,oDAAyB,EAAC;QACxB5E,gBAAgBG,OAAO;QACvBH,gBAAgBG,OAAO,GAAGF,UAAI;IAChC,GAAG;QAACD,gBAAgBG,OAAO;KAAC;IAE5B,IAAM0E,uBAAuB/E,OAAMyE,WAAW,CAC5C,SAACO;QACC,IACE,AAAC,CAAA,CAACA,KACA;;;;;SAKC,CAACnB,QAAQ,CAACmB,EAAEC,aAAa,CAAA,KAC5BtD,cAAc,MACd;YACA6C,gBAAgB7C,WAAW2C,QAAQ7C;QACrC;IACF,GACA;QAAC+C;QAAiB/C;QAAQE;KAAU;IAGtC,IAAM,AAAEuD,uBAAyBC,IAAAA,gDAAuB,IAAhDD;IACR,IAAME,yBAAyBC,IAAAA,sBAAU,EACvCN,sBACA/D,aAAaiD,kBAAQ,CAACG,GAAG,GAAG,MAAM;IAGpC,IAAMkB,qBAAqBtF,OAAMyE,WAAW,CAAC;QAC3CnF,eAAeA;IACjB,GAAG;QAACA;KAAY;IAEhB,IAAME,oBAAoBQ,OAAMyE,WAAW,CAAC;QAC1ChF,yBAAyBA;QACzBgD,sBAAsB;QACtBF,sBAAsB;QACtBN,eAAe;QACfU,mBAAmB;QACnBR,mBAAmB;QACnBE,kBAAkB;IACpB,GAAG;QAAC5C;KAAsB;IAE1B,IAAM8F,kCAAkCvF,OAAMyE,WAAW,CACvD,SAACO;QACC,qDAAqD;QACrD,IACE,CAACA,KACAA,CAAAA,cAAAA,wBAAAA,EAAGQ,YAAY,CAAC3B,QAAQ,CAAC,iBAAgBmB,CAAAA,cAAAA,wBAAAA,EAAGS,MAAM,MAAKlB,UAAUjC,qBAClE;YACA,OAAQI;gBACN;oBACElD;oBACA;gBACF;oBACE8F;YACJ;QACF;IACF,GACA;QAAC9F;QAAmB8F;QAAoBhD;QAAoBI;KAAgB;IAG9E,IAAMgD,mDAAmD,SAACC;QACxD,IAAI/C,cAAc;YAChB;QACF;QACA,IACEgD,0BAAAA,IAAAA,6BAAsB,EAACD,MAAME,MAAM,EAAEF,MAAMG,MAAM,EAAEtF,OAAQuF,UAAU,GAD/DC,qBACNJ,wBADMI,oBAAoBC,2BAC1BL,wBAD0BK,0BAA0BC,yBACpDN,wBADoDM;QAGtD,IAAI,AAACD,CAAAA,4BAA4BC,sBAAqB,KAAMF,oBAAoB;YAC9EnD,gBAAgB;QAClB;IACF;IAEA,IAAMsD,4CAA4C,SAACR;QACjD,IAAI5D,mBAAmB1B,OAAO,IAAI+F,IAAAA,wBAAiB,EAACT,QAAQ;YAC1D;QACF;QAEA,IACEC,0BAAAA,IAAAA,6BAAsB,EAACD,MAAME,MAAM,EAAEF,MAAMG,MAAM,EAAEtF,OAAQuF,UAAU,GAD/DM,mBACNT,wBADMS,kBAAkBL,qBACxBJ,wBADwBI,oBAAoBC,2BAC5CL,wBAD4CK;QAG9C,IAAI9E,YAAY6E,oBAAoB;YAClC;QACF;QAEA,IAAI,CAAChE,eAAe7C,WAAWA,QAAQmH,MAAM,GAAG,GAAG;YACjD,IAAID,kBAAkB;gBACpBtE,mBAAmB1B,OAAO,GAAG;gBAC7B;YACF;YAEA,IAAI,CAAC2F,oBAAoB;gBACvB;YACF;YAEA,IACE,CAACC,4BACDM,IAAAA,uDAAgD,EAACZ,MAAMa,aAAa,CAACf,MAAM,GAC3E;gBACA1D,mBAAmB1B,OAAO,GAAG;gBAC7B;YACF;YACA,sBAAsB;YACtB,IAAId,kBAAkB;gBACpB,IAAMkH,UAAUlH,iBAAiBN;gBACjC,IAAIwH,YAAY,WAAW;oBACzB1E,mBAAmB1B,OAAO,GAAG;oBAC7B;gBACF;YACF;YAEA,IAAIpB,gBAAgB,MAAM;gBACxB,+EAA+E;gBAC/EyH,IAAAA,sBAAiB,EAACjG;gBAClBV,QAAQM,OAAO,CAACpB,YAAY,GAAGyB,mBAAAA,6BAAAA,OAAQiG,SAAS,GAAGC,CAAC;YACtD;YAEA3E,eAAe;YACfE,mBAAmBwD,MAAME,MAAM;YAC/BpD,sBAAsBxD;YACtBsD,sBAAsBpD,QAAQ0H,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;QAC5C;QAEA,IAAI7E,aAAa;YACf,IAAI2D,MAAMG,MAAM,GAAG,GAAG;gBACpBzD,kBAAkB;YACpB,OAAO,IAAIsD,MAAMG,MAAM,GAAGtF,OAAQuF,UAAU,GAAG7D,iBAAiB;gBAC9DG,kBAAkB7B,OAAQuF,UAAU;YACtC,OAAO;gBACL1D,kBAAkBsD,MAAMG,MAAM;YAChC;QACF;IACF;IAEA,IAAMgB,0CAA0C,SAACnB;QAC/C5D,mBAAmB1B,OAAO,GAAG;QAE7B,IAAI2B,aAAa;YACf,IAAM+E,QAAQ,AAAC3E,iBAAiBuD,MAAMqB,QAAQ,GAAI;gBAGpBxG;YAF9B,IAAI4B,mBAAmB,GAAG;gBACxB5C;YACF,OAAO,IAAI4C,kBAAmB5B,CAAAA,CAAAA,qBAAAA,OAAQuF,UAAU,cAAlBvF,gCAAAA,qBAAsB,CAAA,GAAI;gBACtD8E;YACF,OAAO,IAAIyB,QAAQ,OAAO3E,kBAAkB5B,OAAQuF,UAAU,GAAG,GAAG;gBAClEpD;YACF,OAAO;gBACLA;YACF;QACF;IACF;IAEA,IAAMsE,uBAAuB,SAACtD;QAC5B,IAAI,CAACuD,cAAS,IAAI,CAAC1G,QAAQ;YACzB,OAAO,CAAC;QACV;QAEA,IAAM2G,SAASxD,YAAYnB;QAC3B,IAAM4E,SAASzD,YAAYrB;QAE3B,IAAI,AAAC,CAAC6E,UAAU,CAACC,UAAW1E,iBAAiB;YAC3C,OAAO,CAAC;QACV;QAEA,IAAI2E,qBAAqB,AAAC,GAAiB,OAAfjF,gBAAe;QAC3C,IAAIkF,qBAAqB,AAAC,GAAuD,OAArD,CAAC,KAAK,AAAClF,iBAAiB,MAAO5B,OAAOuF,UAAU,GAAG,GAAE;QAEjF,IAAIqB,QAAQ;YACV,OAAO;gBACLG,WAAW,AAAC,eAAiC,OAAnBD,oBAAmB;gBAC7CE,iBAAiB,AAAC,eAAiC,OAAnBF,oBAAmB;YACrD;QACF;QACA,IAAIH,QAAQ;YACV,OAAO;gBACLI,WAAW,AAAC,eAAiC,OAAnBF,oBAAmB;gBAC7CG,iBAAiB,AAAC,eAAiC,OAAnBH,oBAAmB;YACrD;QACF;QAEA,OAAO,CAAC;IACV;IAEA,IAAMI,kCAAkC,SAAC9D;QACvC,IAAI,CAACuD,cAAS,IAAI,CAAC1G,QAAQ;YACzB,OAAO,CAAC;QACV;QAEA,IAAM4G,SAASzD,YAAYrB;QAC3B,IAAI,CAAC8E,QAAQ;YACX,OAAO,CAAC;QACV;QAEA,IAAMM,oBAAoB,IAAItF,iBAAiB5B,OAAOuF,UAAU;QAChE,IAAM4B,oBACJjF,wBACI,IACAA,wBACA,IACA;QAEN,OAAO;YACLkF,SAAS;YACTC,SAASF,sBAAsB,OAAOD,oBAAoBC;QAC5D;IACF;IAEA3H,OAAMI,SAAS,CAAC;QACd,gBAAgB;QAChB,IACE0C,mBACAA,oBAAoB5D,mBACpB,CAAC8D,mBACD,CAACC,kBACD;YACA,IAAM6E,eAAe,AAAC9H,OAAMuD,QAAQ,CAACC,OAAO,CAAC9D,UAC1CqI,GAAG,CAAC,SAACrE;uBAAU5D,IAAAA,kBAAQ,EAAC4D,MAAME,KAAK,EAAE7E;eACrCiJ,IAAI,CAAC,SAACnI;uBAAOA,OAAOiD,mBAAmBjD,OAAOX;;YAEjD,IAAMwF,mBAAmBoD,iBAAiB5I;YAC1Ca,QAAQM,OAAO,CAACyC,gBAAgB,GAAGpC,mBAAAA,6BAAAA,OAAQiG,SAAS,GAAGC,CAAC;YAExD,IAAI9C,kBAAkB;gBACpBU,gBAAgB1B,iBAAiB4B;YACnC,OAAO;gBACLgC,IAAAA,sBAAiB,EAACjG;gBAElBa,iBAAiB;oBAACwB;oBAAiB5D;iBAAgB;gBACnD0C,aAAakB;gBACbhB,aAAa5C;gBACbqC,eAAe;gBACfH,YAAY;gBACZM,UAAUgD;gBAEV,2BAA2B;gBAC3B,IAAI,CAACuD,6BAAc,CAACC,SAAS,EAAE;oBAC7B9C,uBAAuB+C,GAAG;gBAC5B;YACF;QACF;QAEA,oCAAoC;QACpC,IAAIrF,mBAAmBA,oBAAoB5D,mBAAmB8D,iBAAiB;YAC7E,IAAMnB,YAAY3C;YAClB,IAAMyC,YAAYmB;YAClB,IAAIM,wBAAwB;gBAC1BrD,QAAQM,OAAO,CAAC+C,uBAAuB,GAAG;YAC5C;YAEAX,sBAAsB;YACtBF,sBAAsB;YACtBN,eAAe;YACfU,mBAAmB;YACnBR,mBAAmB;YACnBE,kBAAkB;YAClBd,eAAeM;YACfP,iBAAiB;gBAACO;aAAU;YAC5BH,UAAU;YAEVxB,gBAAgBG,OAAO,GAAG;gBACxB,IAAIwB,cAAc,MAAM;oBACtBnB,mBAAAA,6BAAAA,OAAQiE,QAAQ,CAAC,GAAG5E,QAAQM,OAAO,CAACwB,UAAU;gBAChD;gBACAwB,oBACEA,iBAAiB;oBACf5B,QAAQ;oBACRmD,MAAMjD;oBACNkD,IAAIhD;gBACN;YACJ;QACF;QAEA,6CAA6C;QAC7C,IAAI,CAACqB,uBAAuBR,iBAAiB;YAC3CwC,qBACEX,UAAUjC,qBACViD,iCACAvE,aAAaiD,kBAAQ,CAACG,GAAG,GAAG,MAAM;QAEtC;QAEA,0BAA0B;QAC1B,IAAItB,oBAAoB5D,mBAAmB0D,cAAc;YACvDC,gBAAgB;YAChBf,aAAa;YACbF,aAAa;YACbR,YAAY;YACZE,iBAAiB;gBAACpC;aAAgB;YAClCqC,eAAerC;QACjB;IACF,GAAG;QACDA;QACAD;QACAmG;QACAxC;QACAlD;QACAoE;QACArD;QACA+D;QACAxD;QACA8B;QACAG;QACAI;QACAD;QACAF;QACAF;QACAtC;QACA4B;QACAI;QACA6C;QACAL;KACD;IAEDlF,OAAMI,SAAS,CACb,SAASgI;QACP,+EAA+E;QAC/E,IAAMC,wCACJnF,6BAAiD,CAACR;QACpD,IAAM4F,oDACJtF,mBAAmB,CAAChB,eAAemB,uBAAuB;QAE5D,IACE,AAACkF,CAAAA,yCACCC,iDAAgD,KAClDrJ,gBAAgB,MAChB;YACAyB,mBAAAA,6BAAAA,OAAQiE,QAAQ,CAAC,GAAG5E,QAAQM,OAAO,CAACpB,YAAY;QAClD;IACF,GACA;QACEiE;QACAR;QACAM;QACAhB;QACAmB;QACAlE;QACAyB;KACD;IAGH,qBACE,qBAAC6H,8BAAgB,CAACC,QAAQ;QAACC,OAAO5I;qBAChC,qBAAC6I,YAAK;QACJC,WAAU;OACN/I;QACJD,WAAWiJ,IAAAA,gBAAU,cAEnB5H,aAAaiD,kBAAQ,CAACG,GAAG,IAAIwE,IAAAA,gBAAU,mBAAsB,0BAC7D,CAAC9E,oBAAoB3C,kCACrB,CAAC2C,oBAAoB9B,yCACrB8B,2CACAnE;QAEFkJ,SACE1E,gCACIgC,4CACAnF,aAAaiD,kBAAQ,CAACG,GAAG,GACzBsB,mDACAlE;QAENsH,OAAO3E,gCAAgC2C,0CAA0CtF;sBAEjF,qBAACuH;QAAIpJ,SAAS;OACX2D,OAAOyE,GAAG,CAAC,SAACrE;QACX,IAAMC,UAAU7D,IAAAA,kBAAQ,EAAC4D,MAAME,KAAK,EAAE7E;QACtC,IAAMoI,SAASxD,YAAYhC,aAAagC,YAAYnB;QACpD,IAAMwG,qBAAqB7H,YAAYwC,YAAalC,CAAAA,SAASE,YAAYE,SAAQ;QACjF,IAAMoH,mBACJ9B,UAAUxD,YAAYrB,sBAAuBqB,YAAY9B,aAAaJ;YA8BhC1B;QA5BxC,qBACE,qBAACgJ;YACCpJ,WAAWiJ,IAAAA,gBAAU,qBAEnBjF,YAAY1E,0CACZ0E,YAAYhC,sCACZgC,YAAY9B,sCACZ8B,YAAYnB,0DACZmB,YAAYrB,0DACZI,gEAEAA;YAGFwG,gBAAgBF,qBAAqBjE,uBAAuBvD;YAC5D2H,KAAK,SAACC;uBAAOzF,YAAYnC,aAAclB,CAAAA,WAAWD,OAAO,CAACsD,QAAQ,GAAGyF,EAAC;;YACtEC,OAAOpC,qBAAqBtD;YAC5B2F,KAAK3F;WAEJ3C,aAAaiD,kBAAQ,CAACG,GAAG,kBACxB,qBAAC2E;YACCpJ,SAAS;YACT0J,OAAO5B,gCAAgC9D;0BAG3C,qBAACoF;YACCpJ,SAAS;YACT0J,OAAO;gBACLE,WAAWN,mBAAmB,CAAElJ,CAAAA,CAAAA,2BAAAA,QAAQM,OAAO,CAACsD,QAAQ,cAAxB5D,sCAAAA,2BAA4B,CAAA,IAAKyB;YACnE;yBAEA,qBAACgI,6DAA8B;YAAC/H,QAAQO,eAAeP;yBACrD,qBAACgI,2CAAqB;YACpBC,UAAU/F,YAAY9B,aAAa8B,YAAYrB;WAE9CoB;IAMb;AAKV"}