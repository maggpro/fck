{"version":3,"sources":["../../../../src/components/RichTooltip/RichTooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { HoverPopper, HoverPopperProps } from '../HoverPopper/HoverPopper';\nimport styles from './RichTooltip.module.css';\n\nconst stylesAppearance = {\n  accent: styles['RichTooltip--appearance-accent'],\n  white: styles['RichTooltip--appearance-white'],\n  black: styles['RichTooltip--appearance-black'],\n  inversion: styles['RichTooltip--appearance-inversion'],\n};\n\nexport interface RichTooltipProps extends Omit<HoverPopperProps, 'arrowClassName'> {\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichTooltip\n */\nexport const RichTooltip = ({\n  children,\n  arrow = true,\n  appearance = 'neutral',\n  className,\n  ...popperProps\n}: RichTooltipProps) => {\n  return (\n    <HoverPopper\n      className={classNames(\n        styles['RichTooltip'],\n        appearance !== 'neutral' && stylesAppearance[appearance],\n        className,\n      )}\n      arrow={arrow}\n      arrowClassName={styles['RichTooltip__arrow']}\n      {...popperProps}\n    >\n      {children}\n    </HoverPopper>\n  );\n};\n"],"names":["RichTooltip","stylesAppearance","accent","white","black","inversion","children","arrow","appearance","className","popperProps","HoverPopper","classNames","arrowClassName"],"mappings":";;;;+BAsBaA;;;eAAAA;;;;;;+DAtBU;oBACI;2BACmB;AAG9C,IAAMC,mBAAmB;IACvBC,MAAM;IACNC,KAAK;IACLC,KAAK;IACLC,SAAS;AACX;AAYO,IAAML,cAAc;QACzBM,kBAAAA,gCACAC,OAAAA,kCAAQ,gDACRC,YAAAA,4CAAa,+BACbC,mBAAAA,WACGC;QAJHJ;QACAC;QACAC;QACAC;;IAGA,qBACE,qBAACE,wBAAW;QACVF,WAAWG,IAAAA,gBAAU,qBAEnBJ,eAAe,aAAaP,gBAAgB,CAACO,WAAW,EACxDC;QAEFF,OAAOA;QACPM,cAAc;OACVH,cAEHJ;AAGP"}