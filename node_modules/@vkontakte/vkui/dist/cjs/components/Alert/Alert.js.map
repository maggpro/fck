{"version":3,"sources":["../../../../src/components/Alert/Alert.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon20Cancel } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { useId } from '../../hooks/useId';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { Platform } from '../../lib/platform';\nimport { stopPropagation } from '../../lib/utils';\nimport { AlignType, AnchorHTMLAttributesOnly, HasDataAttribute, HasRootRef } from '../../types';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { ButtonProps } from '../Button/Button';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { IconButton } from '../IconButton/IconButton';\nimport { ModalDismissButton } from '../ModalDismissButton/ModalDismissButton';\nimport { PopoutWrapper } from '../PopoutWrapper/PopoutWrapper';\nimport { AlertActionProps } from './AlertAction';\nimport { AlertActions } from './AlertActions';\nimport { AlertHeader, AlertText } from './AlertTypography';\nimport styles from './Alert.module.css';\n\ntype AlertActionMode = 'cancel' | 'destructive' | 'default';\n\nexport interface AlertActionInterface\n  extends Pick<ButtonProps, 'Component'>,\n    AnchorHTMLAttributesOnly,\n    HasDataAttribute {\n  title: string;\n  action?: VoidFunction;\n  autoClose?: boolean;\n  mode: AlertActionMode;\n}\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLElement>, HasRootRef<HTMLDivElement> {\n  actionsLayout?: 'vertical' | 'horizontal';\n  actionsAlign?: AlignType;\n  actions?: AlertActionInterface[];\n  renderAction?: (props: AlertActionProps) => React.ReactNode;\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose: VoidFunction;\n\n  /**\n   * `aria-label` для кнопки закрытия. Необходим, чтобы кнопка была доступной.\n   */\n  dismissLabel?: string;\n  /**\n   * Расположение кнопки закрытия (внутри и вне `popout'a`)\n   * Доступно только в `compact`-режиме, не отображается на `iOS`\n   */\n  dismissButtonMode?: 'inside' | 'outside';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\nexport const Alert = ({\n  actions = [],\n  actionsLayout = 'horizontal',\n  children,\n  className,\n  style,\n  text,\n  header,\n  onClose,\n  dismissLabel = 'Закрыть предупреждение',\n  renderAction,\n  actionsAlign,\n  dismissButtonMode = 'outside',\n  getRootRef,\n  ...restProps\n}: AlertProps) => {\n  const generatedId = useId();\n\n  const headerId = `vkui-alert-${generatedId}-header`;\n  const textId = `vkui-alert-${generatedId}-text`;\n\n  const platform = usePlatform();\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n\n  const [closing, setClosing] = React.useState(false);\n  const isDismissButtonVisible = isDesktop && platform !== Platform.IOS;\n\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  const timeout = platform === Platform.IOS ? 300 : 200;\n\n  const close = React.useCallback(() => {\n    setClosing(true);\n    waitTransitionFinish(\n      elementRef.current,\n      (e?: TransitionEvent) => {\n        if (!e || e.propertyName === 'opacity') {\n          onClose();\n        }\n      },\n      timeout,\n    );\n  }, [elementRef, waitTransitionFinish, onClose, timeout]);\n\n  const onItemClick = React.useCallback(\n    (item: AlertActionInterface) => {\n      const { action, autoClose } = item;\n\n      if (autoClose) {\n        setClosing(true);\n        waitTransitionFinish(\n          elementRef.current,\n          (e?: TransitionEvent) => {\n            if (!e || e.propertyName === 'opacity') {\n              onClose();\n              action && action();\n            }\n          },\n          timeout,\n        );\n      } else {\n        action && action();\n      }\n    },\n    [elementRef, waitTransitionFinish, onClose, timeout],\n  );\n\n  useScrollLock();\n\n  return (\n    <PopoutWrapper\n      className={className}\n      closing={closing}\n      style={style}\n      onClick={close}\n      getRootRef={getRootRef}\n    >\n      <FocusTrap\n        {...restProps}\n        getRootRef={elementRef}\n        onClick={stopPropagation}\n        onClose={close}\n        timeout={timeout}\n        className={classNames(\n          styles['Alert'],\n          platform === Platform.IOS && styles['Alert--ios'],\n          platform === Platform.VKCOM && styles['Alert--vkcom'],\n          closing && styles['Alert--closing'],\n          isDesktop && styles['Alert--desktop'],\n        )}\n        role=\"alertdialog\"\n        aria-modal\n        aria-labelledby={headerId}\n        aria-describedby={textId}\n      >\n        <div\n          className={classNames(\n            styles['Alert__content'],\n            dismissButtonMode === 'inside' && styles['Alert__content--withButton'],\n          )}\n        >\n          {hasReactNode(header) && <AlertHeader id={headerId}>{header}</AlertHeader>}\n          {hasReactNode(text) && <AlertText id={textId}>{text}</AlertText>}\n          {children}\n          {isDismissButtonVisible && dismissButtonMode === 'inside' && (\n            <IconButton\n              aria-label={dismissLabel}\n              className={classNames(styles['Alert__dismiss'], 'vkuiInternalAlert__dismiss')}\n              onClick={close}\n              hoverMode=\"opacity\"\n              activeMode=\"opacity\"\n            >\n              <Icon20Cancel />\n            </IconButton>\n          )}\n        </div>\n        <AlertActions\n          actions={actions}\n          actionsAlign={actionsAlign}\n          actionsLayout={actionsLayout}\n          renderAction={renderAction}\n          onItemClick={onItemClick}\n        />\n        {isDismissButtonVisible && dismissButtonMode === 'outside' && (\n          <ModalDismissButton onClick={close} aria-label={dismissLabel} />\n        )}\n      </FocusTrap>\n    </PopoutWrapper>\n  );\n};\n"],"names":["Alert","actions","actionsLayout","children","className","style","text","header","onClose","dismissLabel","renderAction","actionsAlign","dismissButtonMode","getRootRef","restProps","generatedId","useId","headerId","textId","platform","usePlatform","isDesktop","useAdaptivityWithJSMediaQueries","waitTransitionFinish","useWaitTransitionFinish","React","useState","closing","setClosing","isDismissButtonVisible","Platform","IOS","elementRef","useRef","timeout","close","useCallback","current","e","propertyName","onItemClick","item","action","autoClose","useScrollLock","PopoutWrapper","onClick","FocusTrap","stopPropagation","classNames","VKCOM","role","aria-modal","aria-labelledby","aria-describedby","div","hasReactNode","AlertHeader","id","AlertText","IconButton","aria-label","hoverMode","activeMode","Icon20Cancel","AlertActions","ModalDismissButton"],"mappings":"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"}