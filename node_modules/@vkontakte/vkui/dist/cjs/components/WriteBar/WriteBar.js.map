{"version":3,"sources":["../../../../src/components/WriteBar/WriteBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Title } from '../Typography/Title/Title';\nimport { TypographyProps } from '../Typography/Typography';\nimport styles from './WriteBar.module.css';\n\nexport interface WriteBarProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLTextAreaElement> {\n  /**\n   * Содержимое, отображаемое слева от поля ввода.\n   */\n  before?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое поверх поля ввода (актуально для iOS)\n   */\n  inlineAfter?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое справа от поля ввода\n   */\n  after?: React.ReactNode;\n  /**\n   * Вызывается при смене высоты поля ввода\n   */\n  onHeightChange?: VoidFunction;\n  /**\n   * Добавляет тень вокруг поля ввода\n   */\n  shadow?: boolean;\n\n  children?: never;\n}\n\nconst WriteBarTypography = (props: TypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return <Title {...props} level=\"3\" weight=\"3\" />;\n  }\n\n  return <Headline {...props} />;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBar\n */\nexport const WriteBar = ({\n  className,\n  style,\n  before,\n  inlineAfter,\n  after,\n  getRootRef,\n  getRef,\n  onHeightChange,\n  shadow = false,\n  defaultValue,\n  ...restProps\n}: WriteBarProps) => {\n  const platform = usePlatform();\n\n  const [value, onChange] = useEnsuredControl({\n    defaultValue,\n    ...restProps,\n  });\n\n  const textareaRef = useExternRef(getRef);\n  const currentScrollHeight = React.useRef<number>();\n\n  const resize = React.useCallback(() => {\n    const textareaEl = textareaRef.current;\n    if (!textareaEl) {\n      return;\n    }\n\n    if (textareaEl.offsetParent) {\n      textareaEl.style.height = '';\n      textareaEl.style.height = `${textareaEl.scrollHeight}px`;\n\n      if (textareaEl.scrollHeight !== currentScrollHeight.current && onHeightChange) {\n        onHeightChange();\n        currentScrollHeight.current = textareaEl.scrollHeight;\n      }\n    }\n  }, [onHeightChange, textareaRef]);\n\n  React.useEffect(resize, [resize, value, platform]);\n\n  return (\n    <div\n      ref={getRootRef}\n      className={classNames(\n        styles['WriteBar'],\n        platform === Platform.IOS && styles['WriteBar--ios'],\n        shadow && styles['WriteBar--shadow'],\n        className,\n      )}\n      style={style}\n    >\n      <div className={styles['WriteBar__form']}>\n        {hasReactNode(before) && <div className={styles['WriteBar__before']}>{before}</div>}\n\n        <div className={styles['WriteBar__formIn']}>\n          <WriteBarTypography\n            {...restProps}\n            Component=\"textarea\"\n            className={styles['WriteBar__textarea']}\n            onChange={onChange}\n            getRootRef={textareaRef}\n            value={value}\n          />\n          {hasReactNode(inlineAfter) && (\n            <div className={styles['WriteBar__inlineAfter']}>{inlineAfter}</div>\n          )}\n        </div>\n\n        {hasReactNode(after) && <div className={styles['WriteBar__after']}>{after}</div>}\n      </div>\n    </div>\n  );\n};\n"],"names":["WriteBar","WriteBarTypography","props","platform","usePlatform","Platform","IOS","Title","level","weight","Headline","className","style","before","inlineAfter","after","getRootRef","getRef","onHeightChange","shadow","defaultValue","restProps","useEnsuredControl","value","onChange","textareaRef","useExternRef","currentScrollHeight","React","useRef","resize","useCallback","textareaEl","current","offsetParent","height","scrollHeight","useEffect","div","ref","classNames","hasReactNode","Component"],"mappings":";;;;+BAqDaA;;;eAAAA;;;;;;;;+DArDU;oBACkB;iCACP;4BACL;2BACD;wBACH;wBAEA;qBACH;AAgCtB,IAAMC,qBAAqB,SAACC;IAC1B,IAAMC,WAAWC,IAAAA,wBAAW;IAE5B,IAAID,aAAaE,kBAAQ,CAACC,GAAG,EAAE;QAC7B,qBAAO,qBAACC,YAAK,8CAAKL;YAAOM,OAAM;YAAIC,QAAO;;IAC5C;IAEA,qBAAO,qBAACC,kBAAQ,EAAKR;AACvB;AAKO,IAAMF,WAAW;QACtBW,mBAAAA,WACAC,eAAAA,OACAC,gBAAAA,QACAC,qBAAAA,aACAC,eAAAA,OACAC,oBAAAA,YACAC,gBAAAA,QACAC,wBAAAA,uCACAC,QAAAA,oCAAS,uBACTC,sBAAAA,cACGC;QAVHV;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,IAAMjB,WAAWC,IAAAA,wBAAW;IAE5B,IAA0BkB,yCAAAA,IAAAA,oCAAiB,EAAC;QAC1CF,cAAAA;OACGC,iBAFEE,QAAmBD,wBAAZE,WAAYF;IAK1B,IAAMG,cAAcC,IAAAA,0BAAY,EAACT;IACjC,IAAMU,sBAAsBC,OAAMC,MAAM;IAExC,IAAMC,SAASF,OAAMG,WAAW,CAAC;QAC/B,IAAMC,aAAaP,YAAYQ,OAAO;QACtC,IAAI,CAACD,YAAY;YACf;QACF;QAEA,IAAIA,WAAWE,YAAY,EAAE;YAC3BF,WAAWpB,KAAK,CAACuB,MAAM,GAAG;YAC1BH,WAAWpB,KAAK,CAACuB,MAAM,GAAG,AAAC,GAA0B,OAAxBH,WAAWI,YAAY,EAAC;YAErD,IAAIJ,WAAWI,YAAY,KAAKT,oBAAoBM,OAAO,IAAIf,gBAAgB;gBAC7EA;gBACAS,oBAAoBM,OAAO,GAAGD,WAAWI,YAAY;YACvD;QACF;IACF,GAAG;QAAClB;QAAgBO;KAAY;IAEhCG,OAAMS,SAAS,CAACP,QAAQ;QAACA;QAAQP;QAAOpB;KAAS;IAEjD,qBACE,qBAACmC;QACCC,KAAKvB;QACLL,WAAW6B,IAAAA,gBAAU,kBAEnBrC,aAAaE,kBAAQ,CAACC,GAAG,yBACzBa,kCACAR;QAEFC,OAAOA;qBAEP,qBAAC0B;QAAI3B,SAAS;OACX8B,IAAAA,kBAAY,EAAC5B,yBAAW,qBAACyB;QAAI3B,SAAS;OAA+BE,uBAEtE,qBAACyB;QAAI3B,SAAS;qBACZ,qBAACV,gEACKoB;QACJqB,WAAU;QACV/B,SAAS;QACTa,UAAUA;QACVR,YAAYS;QACZF,OAAOA;SAERkB,IAAAA,kBAAY,EAAC3B,8BACZ,qBAACwB;QAAI3B,SAAS;OAAoCG,eAIrD2B,IAAAA,kBAAY,EAAC1B,wBAAU,qBAACuB;QAAI3B,SAAS;OAA8BI;AAI5E"}