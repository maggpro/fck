{"version":3,"sources":["../../../../src/components/ModalRoot/useModalManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isFunction, noop } from '@vkontakte/vkjs';\nimport { getNavId } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasChildren } from '../../types';\nimport { ModalsState, ModalsStateEntry, ModalType } from './types';\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: VoidFunction;\n  onEntered: (id: string | null) => void;\n  onExit: VoidFunction;\n  onExited: (id: string | null) => void;\n  getModalState: (id: string | undefined | null) => ModalsStateEntry | undefined;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce('ModalRoot');\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: 'setActive' | 'entered' | 'exited' | 'inited';\n    id: string | null;\n  },\n): ModalTransitionState {\n  if (action.type === 'setActive' && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === 'entered' && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === 'exited' && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === 'inited' && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onOpen: (id: string) => void = noop,\n  onOpened: (id: string) => void = noop,\n  onClose: (id: string) => void = noop,\n  onClosed: (id: string) => void = noop,\n  initModal: (state: ModalsStateEntry) => void = noop,\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === 'number') {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(modalTransitionReducer, {\n    activeModal: safeActiveModal,\n    enteringModal: null,\n    exitingModal: null,\n    history: safeActiveModal ? [safeActiveModal] : [],\n    isBack: false,\n  });\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === 'development' && isMissing) {\n      warn(`Переход невозможен - модальное окно (страница) ${activeModal} не существует`, 'error');\n    }\n    dispatchTransition({ type: 'setActive', id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: 'inited', id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEntered = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onOpened)) {\n          modalState.onOpened();\n        } else if (isFunction(onOpened)) {\n          onOpened(id);\n        }\n      }\n\n      dispatchTransition({ type: 'entered', id });\n    },\n    [modalsState, onOpened],\n  );\n  const onExited = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onClosed)) {\n          modalState.onClosed();\n        } else if (isFunction(onClosed)) {\n          onClosed(id);\n        }\n      }\n\n      dispatchTransition({ type: 'exited', id });\n    },\n    [modalsState, onClosed],\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)),\n  );\n  const getModalState = React.useCallback(\n    (id: string | undefined | null) => (id ? modalsState[id] : undefined),\n    [modalsState],\n  );\n\n  function onEnter() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen) && modalState.id) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n\n  function onExit() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose) && modalState.id) {\n        onClose(modalState.id);\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onEntered,\n    onExit,\n    onExited,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n  };\n}\n\ntype WithModalManager<Props extends ModalTransitionProps> = HasChildren &\n  Omit<Props, keyof ModalTransitionProps> & {\n    activeModal?: string | null;\n  };\n\nexport function withModalManager(initModal: (a: ModalsStateEntry) => void = noop) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>,\n  ): React.ComponentType<WithModalManager<Props>> {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onOpen,\n        (props as any).onOpened,\n        (props as any).onClose,\n        (props as any).onClosed,\n        initModal,\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"],"names":["modalTransitionReducer","useModalManager","withModalManager","getModals","children","React","Children","toArray","warn","warnOnce","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","isBack","Boolean","includes","splice","indexOf","push","enteringModal","onOpen","noop","onOpened","onClose","onClosed","initModal","modalsState","useRef","current","forEach","Modal","modalProps","props","getNavId","undefined","settlingHeight","isMissing","safeActiveModal","useReducer","transitionState","dispatchTransition","useIsomorphicLayoutEffect","process","env","NODE_ENV","isCard","ModalType","CARD","onEntered","useCallback","modalState","isFunction","onExited","delayEnter","getModalState","onEnter","onExit","Wrapped","WithModalManager","transitionManager"],"mappings":"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"}