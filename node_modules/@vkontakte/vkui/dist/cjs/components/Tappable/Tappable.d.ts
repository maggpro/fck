import * as React from 'react';
import { type FocusVisibleModeProps } from '../../hooks/useFocusVisibleClassName';
import { AnchorHTMLAttributesOnly, HasChildren, HasComponent, HasRootRef, LiteralUnion } from '../../types';
import { TouchProps } from '../Touch/Touch';
type StateMode = 'opacity' | 'background';
export type TappableElementProps = Omit<React.AllHTMLAttributes<HTMLElement>, 'onTouchStart' | 'onTouchMove' | 'onTouchEnd' | 'onTouchCancel' | 'onMouseDown' | 'onMouseMove' | 'onMouseUp' | 'onMouseLeave'> & AnchorHTMLAttributesOnly;
export interface TappableProps extends TappableElementProps, HasRootRef<HTMLElement>, HasComponent, HasChildren, Pick<TouchProps, 'onStart' | 'onEnd' | 'onMove'>, FocusVisibleModeProps {
    /**
     * Длительность показа active-состояния
     */
    activeEffectDelay?: number;
    stopPropagation?: boolean;
    /**
     * Указывает, должен ли компонент реагировать на hover-состояние
     */
    hasHover?: boolean;
    /**
     * Позволяет управлять hovered-состоянием извне
     */
    hovered?: boolean;
    /**
     * Позволяет управлять activated-состоянием извне
     */
    activated?: boolean;
    /**
     * Указывает, должен ли компонент реагировать на active-состояние
     */
    hasActive?: boolean;
    /**
     * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active
     */
    activeMode?: LiteralUnion<StateMode, string>;
    /**
     * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover
     */
    hoverMode?: LiteralUnion<StateMode, string>;
    onEnter?(outputEvent: MouseEvent): void;
    onLeave?(outputEvent: MouseEvent): void;
    /**
     * Задает border-radius элементу
     * В режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`
     */
    borderRadiusMode?: 'auto' | 'inherit';
}
export interface RootComponentProps extends TouchProps {
    ref?: React.Ref<HTMLElement>;
}
export declare const ACTIVE_DELAY = 70;
export declare const ACTIVE_EFFECT_DELAY = 600;
/**
 * @see https://vkcom.github.io/VKUI/#/Tappable
 */
export declare const Tappable: ({ children, Component, onClick, onKeyDown: _onKeyDown, activeEffectDelay, stopPropagation, getRootRef, hasHover: _hasHover, hoverMode, hasActive: _hasActive, activeMode, focusVisibleMode, onEnter, onLeave, className, hovered: hoveredProp, activated: activatedProp, borderRadiusMode, ...props }: TappableProps) => React.JSX.Element;
export {};
//# sourceMappingURL=Tappable.d.ts.map