{"version":3,"sources":["../../../../src/components/FocusTrap/FocusTrap.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { FOCUSABLE_ELEMENTS_LIST, Keys, pressedKey } from '../../lib/accessibility';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { HasComponent, HasRootRef } from '../../types';\nimport { AppRootContext } from '../AppRoot/AppRootContext';\n\nconst FOCUSABLE_ELEMENTS: string = FOCUSABLE_ELEMENTS_LIST.join();\nexport interface FocusTrapProps<T extends HTMLElement = HTMLElement>\n  extends React.AllHTMLAttributes<T>,\n    HasRootRef<T>,\n    HasComponent {\n  restoreFocus?: boolean;\n  timeout?: number;\n  onClose?(): void;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FocusTrap\n */\nexport const FocusTrap = <T extends HTMLElement = HTMLElement>({\n  Component = 'div',\n  onClose,\n  restoreFocus = true,\n  timeout = 0,\n  getRootRef,\n  children,\n  ...restProps\n}: FocusTrapProps<T>) => {\n  const ref = useExternRef<T>(getRootRef);\n\n  const { document, window } = useDOM();\n\n  const [focusableNodes, setFocusableNodes] = React.useState<HTMLElement[] | null>(null);\n  const [restoreFocusTo, setRestoreFocusTo] = React.useState<HTMLElement | null>(null);\n\n  // HANDLE TRAP MOUNT\n\n  const { keyboardInput } = React.useContext(AppRootContext);\n  const focusOnTrapMount = useTimeout(() => {\n    if (\n      keyboardInput &&\n      !ref.current?.contains(document!.activeElement) &&\n      focusableNodes?.length\n    ) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    focusOnTrapMount.set();\n  }, []);\n\n  // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const nodes: HTMLElement[] = [];\n    Array.prototype.forEach.call(\n      // eslint-disable-next-line no-restricted-properties\n      ref.current.querySelectorAll(FOCUSABLE_ELEMENTS),\n      (focusableEl: Element) => {\n        const { display, visibility } = window!.getComputedStyle(focusableEl);\n\n        if (display !== 'none' && visibility !== 'hidden') {\n          nodes.push(focusableEl as HTMLElement);\n        }\n      },\n    );\n\n    if (nodes.length === 0) {\n      // Чтобы фокус был хотя бы на родителе\n      nodes.push(ref.current);\n    }\n\n    setFocusableNodes(nodes);\n  }, [children]);\n\n  // HANDLE TRAP UNMOUNT\n\n  const focusOnTrapUnmount = useTimeout(() => {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    if (restoreFocus && document!.activeElement) {\n      setRestoreFocusTo(document!.activeElement as HTMLElement);\n\n      return () => {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return;\n  }, [restoreFocus]);\n\n  const onDocumentKeydown = (e: KeyboardEvent) => {\n    if (pressedKey(e) === Keys.TAB && focusableNodes?.length) {\n      const lastIdx = focusableNodes.length - 1;\n      const targetIdx = focusableNodes.findIndex((node) => node === e.target);\n\n      const shouldFocusFirstNode = targetIdx === -1 || (targetIdx === lastIdx && !e.shiftKey);\n\n      if (shouldFocusFirstNode || (targetIdx === 0 && e.shiftKey)) {\n        e.preventDefault();\n\n        const node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document!.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (onClose && pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n  useGlobalEventListener(document, 'keydown', onDocumentKeydown, {\n    capture: true,\n  });\n\n  return (\n    <Component tabIndex={-1} ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n};\n"],"names":["FocusTrap","FOCUSABLE_ELEMENTS","FOCUSABLE_ELEMENTS_LIST","join","Component","onClose","restoreFocus","timeout","getRootRef","children","restProps","ref","useExternRef","useDOM","document","window","React","useState","focusableNodes","setFocusableNodes","restoreFocusTo","setRestoreFocusTo","keyboardInput","useContext","AppRootContext","focusOnTrapMount","useTimeout","current","contains","activeElement","length","focus","useIsomorphicLayoutEffect","set","nodes","Array","prototype","forEach","call","querySelectorAll","focusableEl","getComputedStyle","display","visibility","push","focusOnTrapUnmount","onDocumentKeydown","e","pressedKey","Keys","TAB","lastIdx","targetIdx","findIndex","node","target","shouldFocusFirstNode","shiftKey","preventDefault","ESCAPE","useGlobalEventListener","capture","tabIndex"],"mappings":"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"}