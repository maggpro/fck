{"version":3,"sources":["../../../../src/components/ChipsSelect/ChipsSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useDOM } from '../../lib/dom';\nimport type { Placement } from '../../lib/floating';\nimport { defaultFilterFn } from '../../lib/select';\nimport { ChipOption, ChipValue, RenderChip } from '../Chip/Chip';\nimport { ChipsInputProps } from '../ChipsInput/ChipsInput';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport styles from './ChipsSelect.module.css';\n\nconst findIndexAfter = <O extends ChipOption>(options: O[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = <O extends ChipOption>(\n  options: O[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nexport interface ChipsSelectProps<Option extends ChipOption>\n  extends Omit<ChipsInputProps<Option>, 'after'> {\n  popupDirection?: 'top' | 'bottom';\n  options?: Option[];\n  filterFn?:\n    | false\n    | ((\n        value?: string,\n        option?: Option,\n        getOptionLabel?: Pick<ChipsInputProps<Option>, 'getOptionLabel'>['getOptionLabel'],\n      ) => boolean);\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (e: React.MouseEvent | React.KeyboardEvent, option: Option) => void;\n  /**\n   * Закрытие выпадающего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Добавляет значение в список на событие `onBlur` (использовать вместе с `creatable`)\n   */\n  addOnBlur?: boolean;\n  /**\n   * Отключает максимальную высоту по умолчанию\n   */\n  noMaxHeight?: boolean;\n}\n\ntype FocusActionType = 'next' | 'prev';\n\nconst FOCUS_ACTION_NEXT: FocusActionType = 'next';\nconst FOCUS_ACTION_PREV: FocusActionType = 'prev';\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption(props) {\n    return <CustomSelectOption {...props} />;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport const ChipsSelect = <Option extends ChipOption>(props: ChipsSelectProps<Option>) => {\n  const propsWithDefault = { ...chipsSelectDefaultProps, ...props };\n  const {\n    style,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    className,\n    fetching,\n    renderOption,\n    emptyText,\n    getRef,\n    getRootRef,\n    disabled,\n    placeholder,\n    tabIndex,\n    getOptionValue,\n    getOptionLabel,\n    showSelected,\n    getNewOptionData,\n    renderChip,\n    popupDirection,\n    creatable,\n    filterFn,\n    inputValue,\n    creatableText,\n    closeAfterSelect,\n    onChangeStart,\n    before,\n    icon,\n    options,\n    fixDropdownWidth,\n    forceDropdownPortal,\n    noMaxHeight = false,\n    ...restProps\n  } = propsWithDefault;\n\n  const { document } = useDOM();\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRootRef);\n  const {\n    fieldValue,\n    selectedOptions = [],\n    opened,\n    setOpened,\n    addOptionFromInput,\n    filteredOptions,\n    addOption,\n    handleInputChange,\n    clearInput,\n    focusedOption,\n    setFocusedOption,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n  } = useChipsSelect(propsWithDefault);\n\n  const showCreatable = Boolean(\n    creatable && creatableText && !filteredOptions.length && fieldValue,\n  );\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(null);\n    onFocus!(e);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    onBlur!(e);\n\n    // Не добавляем значение, если его нужно выбрать строго из списка\n    if (!e.defaultPrevented && !creatable) {\n      e.preventDefault();\n    }\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    const isClickOutsideFormField = !rootRef.current?.contains(e.target as Node);\n    const isClickOutsideDropdown = !scrollBoxRef.current?.contains(e.target as Node);\n\n    if (isClickOutsideFormField && isClickOutsideDropdown) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = React.useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number | null) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    const option = filteredOptions[index];\n\n    if (option?.disabled) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number | null, type: FocusActionType) => {\n    let index = nextIndex === null ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      const nextIndex = findIndexAfter(filteredOptions, index);\n      index = nextIndex === -1 ? findIndexAfter(filteredOptions) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === FOCUS_ACTION_PREV) {\n      const beforeIndex = findIndexBefore(filteredOptions, index);\n      index = beforeIndex === -1 ? findIndexBefore(filteredOptions) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    focusOptionByIndex(index, focusedOptionIndex);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown!(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        focusOption(null, FOCUS_ACTION_NEXT);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        focusOption(null, FOCUS_ACTION_NEXT);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened) {\n      if (focusedOptionIndex != null) {\n        const option = filteredOptions[focusedOptionIndex];\n\n        if (option) {\n          onChangeStart!(e, option);\n\n          if (!e.defaultPrevented) {\n            addOption(option);\n            setFocusedOptionIndex(null);\n            clearInput();\n            closeAfterSelect && setOpened(false);\n            e.preventDefault();\n          }\n        } else if (!creatable) {\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  const renderChipWrapper = (renderChipProps: RenderChip<Option> | undefined) => {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    const onRemoveWrapper = (e: React.MouseEvent | undefined, value: ChipValue | undefined) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      renderChipProps.onRemove?.(e, value);\n    };\n\n    return renderChip!({\n      ...renderChipProps,\n      onRemove: onRemoveWrapper,\n    });\n  };\n\n  const isPopperDirectionTop = popperPlacement?.includes('top');\n\n  const onPlacementChange = React.useCallback(\n    (placement?: Placement) => {\n      setPopperPlacement(placement);\n    },\n    [setPopperPlacement],\n  );\n\n  const onDropdownMouseLeave = React.useCallback(() => {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n\n  const toggleOpened = () => {\n    setOpened((prevOpened) => !prevOpened);\n  };\n\n  return (\n    <>\n      <FormField\n        getRootRef={rootRef}\n        style={style}\n        className={classNames(\n          styles['ChipsSelect'],\n          opened &&\n            (isPopperDirectionTop\n              ? styles['ChipsSelect--pop-up']\n              : styles['ChipsSelect--pop-down']),\n          className,\n        )}\n        disabled={disabled}\n        role=\"application\"\n        aria-disabled={disabled}\n        aria-readonly={restProps.readOnly}\n        after={\n          <IconButton\n            className={styles['ChipsSelect__dropdown']}\n            activeMode=\"\"\n            hoverMode=\"\"\n            // TODO [>=6]: add label customization\n            aria-label={opened ? 'Скрыть' : 'Развернуть'}\n            onClick={toggleOpened}\n          >\n            {icon ?? <DropdownIcon className={styles['ChipsSelect__icon']} opened={opened} />}\n          </IconButton>\n        }\n        before={before}\n      >\n        <ChipsInputBase\n          {...restProps}\n          tabIndex={tabIndex}\n          value={selectedOptions}\n          inputValue={fieldValue}\n          getNewOptionData={getNewOptionData}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          renderChip={renderChipWrapper}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          getRef={getRef}\n          disabled={disabled}\n          onInputChange={handleInputChange}\n        />\n      </FormField>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={rootRef}\n          placement={popupDirection}\n          scrollBoxRef={scrollBoxRef}\n          onPlacementChange={onPlacementChange}\n          onMouseLeave={onDropdownMouseLeave}\n          fetching={fetching}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          noMaxHeight={noMaxHeight}\n        >\n          {showCreatable && (\n            <CustomSelectOption\n              hovered={focusedOptionIndex === 0}\n              onMouseDown={addOptionFromInput}\n              onMouseEnter={() => setFocusedOptionIndex(0)}\n            >\n              {creatableText}\n            </CustomSelectOption>\n          )}\n          {!filteredOptions?.length && !showCreatable && emptyText ? (\n            <Footnote className={styles['ChipsSelect__empty']}>{emptyText}</Footnote>\n          ) : (\n            filteredOptions.map((option: Option, index: number) => {\n              const label = getOptionLabel!(option);\n              const hovered =\n                focusedOption && getOptionValue!(option) === getOptionValue!(focusedOption);\n              const selected = selectedOptions.find((selectedOption: Option) => {\n                return getOptionValue!(selectedOption) === getOptionValue!(option);\n              });\n              const value = getOptionValue!(option);\n\n              return (\n                <React.Fragment key={`${typeof value}-${value}`}>\n                  {renderOption!({\n                    option,\n                    hovered: Boolean(hovered),\n                    children: label,\n                    disabled: option.disabled,\n                    selected: !!selected,\n                    getRootRef: (e) => {\n                      if (e) {\n                        return (chipsSelectOptions[index] = e);\n                      }\n                      return undefined;\n                    },\n                    onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                      if (option.disabled) {\n                        return;\n                      }\n                      onChangeStart?.(e, option);\n\n                      if (!e.defaultPrevented) {\n                        closeAfterSelect && setOpened(false);\n                        addOption(option);\n                        clearInput();\n                      }\n                    },\n                    onMouseEnter: () => setFocusedOptionIndex(index),\n                  })}\n                </React.Fragment>\n              );\n            })\n          )}\n        </CustomSelectDropdown>\n      )}\n    </>\n  );\n};\n"],"names":["ChipsSelect","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","chipsSelectDefaultProps","chipsInputDefaultProps","emptyText","creatableText","onChangeStart","noop","creatable","fetching","showSelected","closeAfterSelect","filterFn","defaultFilterFn","renderOption","props","CustomSelectOption","propsWithDefault","style","onFocus","onBlur","onKeyDown","className","getRef","getRootRef","placeholder","tabIndex","getOptionValue","getOptionLabel","getNewOptionData","renderChip","popupDirection","inputValue","before","icon","fixDropdownWidth","forceDropdownPortal","noMaxHeight","restProps","document","useDOM","React","useState","undefined","popperPlacement","setPopperPlacement","scrollBoxRef","useRef","rootRef","useExternRef","useChipsSelect","fieldValue","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","handleFocus","e","handleBlur","defaultPrevented","preventDefault","handleClickOutside","isClickOutsideFormField","current","contains","target","isClickOutsideDropdown","chipsSelectOptions","scrollToElement","index","center","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","beforeIndex","handleKeyDown","key","includes","useEffect","useGlobalEventListener","renderChipWrapper","renderChipProps","onRemoveWrapper","value","stopPropagation","onRemove","isPopperDirectionTop","onPlacementChange","useCallback","placement","onDropdownMouseLeave","toggleOpened","prevOpened","FormField","classNames","role","aria-disabled","aria-readonly","readOnly","after","IconButton","activeMode","hoverMode","aria-label","onClick","DropdownIcon","ChipsInputBase","onInputChange","CustomSelectDropdown","targetRef","onMouseLeave","sameWidth","forcePortal","hovered","onMouseDown","onMouseEnter","Footnote","map","label","selected","find","selectedOption","Fragment","children"],"mappings":"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"}