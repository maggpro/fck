import type { Exact } from '../../types';
import { type PlatformType } from '../platform';
import { SizeType, ViewHeight, ViewWidth } from './constants';
import type { CSSBreakpointsClassNames, MediaQueries } from './types';
/**
 * @public
 */
export declare function getViewWidthByViewportWidth(viewportWidth: number): ViewWidth;
export declare function getViewWidthByMediaQueries(mediaQueries: MediaQueries): ViewWidth;
/**
 * @public
 */
export declare function getViewHeightByViewportHeight(viewportHeight: number): ViewHeight;
export declare function getViewHeightByMediaQueries(mediaQueries: MediaQueries): ViewHeight;
export declare function getSizeX(viewWidth: ViewWidth): SizeType;
export declare function isCompactByViewWidth(viewWidth: ViewWidth | undefined, hasPointer?: boolean): boolean | undefined;
export declare function isCompactByViewHeight(viewHeight: ViewHeight | undefined): boolean;
export declare function getSizeY(viewWidth: ViewWidth, viewHeight: ViewHeight, hasPointer: boolean): SizeType;
/**
 * Проверка на Desktop.
 *
 * Функция гарантировано вернёт `boolean` или `null` в зависимости от условий.
 *
 * Возвращаем `null` в случае, если у нас недостаточно данных, чтобы определить платформу.
 *
 * ⚠️ При передаче Platform.VKCOM всегда будет возвращать `true`.
 */
export declare function tryToCheckIsDesktop(viewWidth: ViewWidth, viewHeight: ViewHeight, hasPointer: undefined | boolean, platform?: PlatformType): boolean;
export declare function tryToCheckIsDesktop(viewWidth: ViewWidth, viewHeight: undefined, hasPointer: boolean, platform?: PlatformType): boolean;
export declare function tryToCheckIsDesktop(viewWidth: undefined | ViewWidth, viewHeight: undefined, hasPointer: undefined, platform?: PlatformType): null;
export declare function tryToCheckIsDesktop(viewWidth: undefined, viewHeight: undefined | ViewHeight, hasPointer: undefined, platform?: PlatformType): null;
export declare function tryToCheckIsDesktop(viewWidth: undefined, viewHeight: undefined, hasPointer: undefined | boolean, platform?: PlatformType): null;
export declare function tryToCheckIsDesktop(viewWidth: undefined | ViewWidth, viewHeight: undefined | ViewHeight, hasPointer: undefined | boolean, platform?: PlatformType): null | boolean;
/**
 * Конвертирует `viewWidth` в CSS брейкпоинты (см. тесты для наглядности).
 *
 * > Note: используется восклицательный знак (!), чтобы принудить TS поверить, что св-во точно не может быть
 * > `undefined`. Это всё из-за применения `Partial<...>` для объекта.
 */
export declare function viewWidthToClassName<T extends Partial<CSSBreakpointsClassNames>>(breakpointClassNames: Exact<CSSBreakpointsClassNames, T>, viewWidth?: ViewWidth | 'none'): string | null;
//# sourceMappingURL=functions.d.ts.map