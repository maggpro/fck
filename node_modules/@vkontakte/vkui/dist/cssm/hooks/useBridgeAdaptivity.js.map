{"version":3,"sources":["../../../src/hooks/useBridgeAdaptivity.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface BridgeAdaptivity {\n  type: '' | 'force_mobile' | 'force_mobile_compact' | 'adaptive';\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(data: any): BridgeAdaptivity | null {\n  const { adaptivity, viewport_width, viewport_height } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewport_width) ? Number(viewport_width) : 0,\n    viewportHeight: isFinite(viewport_height) ? Number(viewport_height) : 0,\n  };\n\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\n/**\n * TODO [>=6]: удалить хук (#5049)\n * @deprecated v5.8.0\n */\nexport function useBridgeAdaptivity(disable = false): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] = React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    if (disable) {\n      return;\n    }\n\n    const updateAdaptivity = (data: any) => {\n      if (!('adaptivity' in data) || !('viewport_width' in data) || !('viewport_height' in data)) {\n        return;\n      }\n\n      const newAdaptivity = resolveAdaptivity(data);\n\n      if (newAdaptivity) {\n        setBridgeAdaptivity(newAdaptivity);\n      }\n    };\n\n    const handleBridgeEvent = (event: BridgeEvent) => {\n      const { type, data } = event.detail;\n\n      if (type !== 'VKWebAppUpdateConfig') {\n        return;\n      }\n\n      updateAdaptivity(data);\n    };\n\n    vkBridge.subscribe(handleBridgeEvent);\n    vkBridge.send('VKWebAppGetConfig').then(updateAdaptivity).catch(console.error);\n\n    return () => {\n      vkBridge.unsubscribe(handleBridgeEvent);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n"],"names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","type","viewportWidth","viewportHeight","resolveAdaptivity","data","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","Number","useBridgeAdaptivity","disable","setBridgeAdaptivity","useState","updateAdaptivity","newAdaptivity","handleBridgeEvent","event","detail","subscribe","send","then","catch","console","error","unsubscribe"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,OAAOC,cAAc,uBAAuB;AAC5C,SAASC,yBAAyB,QAAQ,mCAAmC;AAiB7E,IAAIC,eAAiC;IACnCC,MAAM;IACNC,eAAe;IACfC,gBAAgB;AAClB;AAEA,SAASC,kBAAkBC,IAAS;IAClC,MAAM,EAAEC,UAAU,EAAEC,cAAc,EAAEC,eAAe,EAAE,GAAGH;IAExD,MAAMI,mBAAqC;QACzCR,MAAM;QACNC,eAAeQ,SAASH,kBAAkBI,OAAOJ,kBAAkB;QACnEJ,gBAAgBO,SAASF,mBAAmBG,OAAOH,mBAAmB;IACxE;IAEA,OAAQF;QACN,KAAK;QACL,KAAK;QACL,KAAK;YACHG,iBAAiBR,IAAI,GAAGK;IAC5B;IAEA,OAAOG;AACT;AAEA;;;CAGC,GACD,OAAO,SAASG,oBAAoBC,UAAU,KAAK;IACjD,MAAM,CAACJ,kBAAkBK,oBAAoB,GAAGjB,MAAMkB,QAAQ,CAAmBf;IAEjFD,0BAA0B;QACxB,IAAIc,SAAS;YACX;QACF;QAEA,MAAMG,mBAAmB,CAACX;YACxB,IAAI,CAAE,CAAA,gBAAgBA,IAAG,KAAM,CAAE,CAAA,oBAAoBA,IAAG,KAAM,CAAE,CAAA,qBAAqBA,IAAG,GAAI;gBAC1F;YACF;YAEA,MAAMY,gBAAgBb,kBAAkBC;YAExC,IAAIY,eAAe;gBACjBH,oBAAoBG;YACtB;QACF;QAEA,MAAMC,oBAAoB,CAACC;YACzB,MAAM,EAAElB,IAAI,EAAEI,IAAI,EAAE,GAAGc,MAAMC,MAAM;YAEnC,IAAInB,SAAS,wBAAwB;gBACnC;YACF;YAEAe,iBAAiBX;QACnB;QAEAP,SAASuB,SAAS,CAACH;QACnBpB,SAASwB,IAAI,CAAC,qBAAqBC,IAAI,CAACP,kBAAkBQ,KAAK,CAACC,QAAQC,KAAK;QAE7E,OAAO;YACL5B,SAAS6B,WAAW,CAACT;QACvB;IACF,GAAG,EAAE;IAEL,OAAOT;AACT"}