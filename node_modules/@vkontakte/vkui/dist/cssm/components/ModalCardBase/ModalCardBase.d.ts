import * as React from 'react';
import { HTMLAttributesWithRootRef } from '../../types';
export interface ModalCardBaseProps extends HTMLAttributesWithRootRef<HTMLDivElement> {
    /**
     * Иконка.
     *
     * Может быть компонентом иконки, например, `<Icon56MoneyTransferOutline />`, или `<Avatar size={72} src="" />`
     */
    icon?: React.ReactNode;
    /**
     * Заголовок карточки
     */
    header?: React.ReactNode;
    /**
     * Подзаголовок
     */
    subheader?: React.ReactNode;
    /**
     * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:
     *
     * - `size="l" mode="primary" stretched`
     * - `size="l" mode="secondary" stretched`
     *
     * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:
     *
     * - `gap="s" mode="horizontal" stretched`
     * - `gap="m" mode="vertical" stretched`
     */
    actions?: React.ReactNode;
    onClose?: VoidFunction;
    /**
     * `aria-label` для кнопки закрытия. Необходим, чтобы кнопка была доступной.
     */
    dismissLabel?: string;
    /**
     * Задаёт контенту максимальную ширину для десктопной версии.
     */
    size?: number;
    /**
     * `data-testid` для кнопки закрытия
     */
    modalDismissButtonTestId?: string;
    /**
     * Расположение кнопки закрытия (внутри и вне `popout'a`)
     * Доступно только в `compact`-режиме
     * На `iOS` в `regular`-режиме всегда включен `inside`
     */
    dismissButtonMode?: 'inside' | 'outside';
}
/**
 * @see https://vkcom.github.io/VKUI/#/ModalCardBase
 */
export declare const ModalCardBase: ({ icon, header, subheader, children, actions, onClose, dismissLabel, style, size: sizeProp, modalDismissButtonTestId, dismissButtonMode, ...restProps }: ModalCardBaseProps) => React.JSX.Element;
//# sourceMappingURL=ModalCardBase.d.ts.map