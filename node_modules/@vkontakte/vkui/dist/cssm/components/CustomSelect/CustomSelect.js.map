{"version":3,"sources":["../../../../src/components/CustomSelect/CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusWithin } from '../../hooks/useFocusWithin';\nimport { useId } from '../../hooks/useId';\nimport { SizeType } from '../../lib/adaptivity';\nimport { useDOM } from '../../lib/dom';\nimport type { PlacementWithAuto } from '../../lib/floating';\nimport { defaultFilterFn } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { debounce } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport { SelectType } from '../Select/Select';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport { CustomSelectClearButton, CustomSelectClearButtonProps } from './CustomSelectClearButton';\nimport { CustomSelectInput } from './CustomSelectInput';\nimport styles from './CustomSelect.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelect--sizeY-none'],\n  [SizeType.COMPACT]: styles['CustomSelect--sizeY-compact'],\n};\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = <T extends CustomSelectOptionInterface>(options: T[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn<T extends CustomSelectOptionInterface>({\n  option,\n  ...props\n}: CustomSelectRenderOption<T>): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  value: SelectValue,\n  withClear: boolean,\n) {\n  if (withClear && value === '') {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = <T extends CustomSelectOptionInterface>(\n  options: SelectProps<T>['options'],\n  inputValue: string,\n  filterFn: SelectProps<T>['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nconst defaultOptions: CustomSelectOptionInterface[] = [];\n\ntype FilterFn<T> = (\n  value: string,\n  option: T,\n  getOptionLabel?: (option: Partial<T>) => string,\n) => boolean;\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\nexport interface CustomSelectRenderOption<T extends CustomSelectOptionInterface>\n  extends CustomSelectOptionProps {\n  option: T;\n}\n\nexport interface SelectProps<\n  OptionInterfaceT extends CustomSelectOptionInterface = CustomSelectOptionInterface,\n> extends NativeSelectProps,\n    FormFieldProps,\n    TrackerOptionsProps {\n  /**\n   * Если `true`, то при клике на `CustomSelect` в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * > ⚠️ В **v6** из возвращаемых типов будет удалён `CustomSelectOptionInterface[]`. Для кастомной фильтрации используйте\n   * > `filterFn`.\n   */\n  onInputChange?: (e: React.ChangeEvent, options: OptionInterfaceT[]) => void | OptionInterfaceT[];\n  options: OptionInterfaceT[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?: false | FilterFn<OptionInterfaceT>;\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   *\n   * > ⚠️  Важно: cвойство опции `disabled` должно выставляться только через проп `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе `CustomSelect` не будет знать об актуальном состоянии\n   * опции.\n   */\n  renderOption?: (props: CustomSelectRenderOption<OptionInterfaceT>) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Кастомная кнопка для очистки значения.\n   * Должна принимать обязательное свойство `onClick`\n   */\n  ClearButton?: React.ComponentType<CustomSelectClearButtonProps>;\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n  /**\n   * (e2e) testId кнопки очистки\n   */\n  clearButtonTestId?: string;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n  /**\n   * Отключает максимальную высоту по умолчанию\n   */\n  noMaxHeight?: boolean;\n  /**\n   * (e2e) testId элемента, внутри которого отображается текст выбранной опции `CustomSelect` или плейсхолдер.\n   */\n  labelTextTestId?: string;\n  nativeSelectTestId?: string;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect<OptionInterfaceT extends CustomSelectOptionInterface>(\n  props: SelectProps<OptionInterfaceT>,\n) {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection,\n    style,\n    onChange,\n    children,\n    onInputChange: onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    renderOption: renderOptionProp = defaultRenderOptionFn,\n    options: optionsProp = defaultOptions as OptionInterfaceT[],\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    icon: iconProp,\n    ClearButton = CustomSelectClearButton,\n    allowClearButton = false,\n    dropdownOffsetDistance = 0,\n    fixDropdownWidth = true,\n    noMaxHeight = false,\n    ['aria-labelledby']: ariaLabelledBy,\n    clearButtonTestId,\n    nativeSelectTestId,\n    defaultValue,\n    required,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const handleRootRef = useExternRef(containerRef, getRootRef);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = useExternRef(getRef);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    () => props.value ?? defaultValue ?? (allowClearButton ? '' : undefined),\n  );\n  const [popperPlacement, setPopperPlacement] = React.useState<PlacementWithAuto | undefined>(\n    undefined,\n  );\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? defaultValue, allowClearButton),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      options.some(({ value }) => nativeSelectValue === value) ||\n      (allowClearButton && nativeSelectValue === '')\n    ) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      (opened &&\n        dropdownOffsetDistance === 0 &&\n        (popperPlacement?.includes('top')\n          ? styles['CustomSelect--pop-up']\n          : styles['CustomSelect--pop-down'])) ||\n      undefined,\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseMove`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      if (!opened) {\n        setOpened(true);\n      }\n      resetFocusedOption();\n      const fullInput = keyboardInput + key;\n\n      setKeyboardInput(fullInput);\n    },\n    [keyboardInput, opened, resetFocusedOption],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    resetFocusedOption();\n    onClose?.();\n  }, [onClose, resetKeyboardInput, resetFocusedOption]);\n\n  const selectOption = React.useCallback(\n    (index: number) => {\n      const item = options[index];\n\n      setNativeSelectValue(item?.value);\n      close();\n\n      const shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync =\n        isControlledOutside &&\n        props.value !== nativeSelectValue &&\n        nativeSelectValue === item?.value;\n\n      if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n        const event = new Event('change', { bubbles: true });\n        selectElRef.current?.dispatchEvent(event);\n      }\n    },\n    [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue],\n  );\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('focusout', { bubbles: true });\n    selectElRef.current?.dispatchEvent(event);\n  }, [close, selectElRef]);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focusin', { bubbles: true });\n    selectElRef.current?.dispatchEvent(event);\n  }, [selectElRef]);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      defaultValue,\n      props.value,\n      searchable,\n      allowClearButton,\n    ],\n  );\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(\n      options,\n      e.currentTarget.value,\n      allowClearButton,\n    );\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      // TODO [>=6]: удалить `onInputChangeProp`.\n      if (onInputChangeProp) {\n        const options = onInputChangeProp(e, optionsProp);\n        if (options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn(\n              'Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' +\n                'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.',\n            );\n          }\n          setOptions(options);\n          setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n        }\n      } else {\n        const options = filter(optionsProp, e.target.value, filterFn);\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n      }\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Backspace':\n        case 'Delete': {\n          if (!opened) {\n            setOpened(true);\n          }\n          resetFocusedOption();\n\n          break;\n        }\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [\n      areOptionsShown,\n      close,\n      focusOption,\n      onKeyboardInput,\n      open,\n      opened,\n      selectFocused,\n      resetFocusedOption,\n    ],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectOption(index);\n      }\n    },\n    [options, selectOption],\n  );\n\n  const prevMousePositionRef = React.useRef<{\n    x: React.MouseEvent['clientX'];\n    y: React.MouseEvent['clientY'];\n  }>({ x: 0, y: 0 });\n  const focusOptionOnMouseMove = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const isMouseChangedPosition =\n        Math.abs(prevMousePositionRef.current.x - e.clientX) >= 1 ||\n        Math.abs(prevMousePositionRef.current.y - e.clientY) >= 1;\n\n      if (isMouseChangedPosition) {\n        focusOptionByIndex(\n          Array.prototype.indexOf.call(e.currentTarget.parentNode?.children, e.currentTarget),\n          false,\n        );\n      }\n\n      prevMousePositionRef.current = { x: e.clientX, y: e.clientY };\n    },\n    [focusOptionByIndex],\n  );\n\n  const popupAriaId = useId();\n  const renderOption = React.useCallback(\n    (option: OptionInterfaceT, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseMove` вместо `onMouseEnter/onMouseOver`.\n            // Потому что если при навигации с клавиатуры курсор наведён на\n            // список, то при первом автоматическом скролле списка вызывается событие MouseOver/MouseEnter\n            // обработчик которого фокусирует опцию под курсором, хотя при навигация с клавиатуры пользователь мог уйти дальше по списку, это путает.\n            // Причём координаты события меняются на пару пикселей по сравнению с прошлым вызовом,\n            // а значит нельзя на них опираться, чтобы запретить обработку такого события.\n            // C mousemove такой проблемы нет, что позволяет реализовать поведение при наведении с клавиатуры и при наведении мышью идентично `<select>`.\n            onMouseMove: focusOptionOnMouseMove,\n            id: `${popupAriaId}-${option.value}`,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      focusOptionOnMouseMove,\n      renderOptionProp,\n      selectedOptionIndex,\n      popupAriaId,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options?.length > 0 ? (\n        options.map(renderOption)\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  const selectInputRef = React.useRef<HTMLInputElement | null>(null);\n  const focusOnInputTimerRef = React.useRef<ReturnType<typeof setTimeout>>();\n  const focusOnInput = React.useCallback(() => {\n    clearTimeout(focusOnInputTimerRef.current);\n\n    focusOnInputTimerRef.current = setTimeout(() => {\n      selectInputRef.current && selectInputRef.current.focus();\n    }, 0);\n  }, []);\n  useIsomorphicLayoutEffect(function clearFocusOnInputTimer() {\n    return () => {\n      clearTimeout(focusOnInputTimerRef.current);\n    };\n  }, []);\n\n  const controlledValueSet = isControlledOutside && props.value !== '';\n  const uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';\n  const clearButtonShown =\n    allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n\n  const clearButton = React.useMemo(() => {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return (\n      <ClearButton\n        className={iconProp === undefined ? styles['CustomSelect--clear-icon'] : undefined}\n        onClick={function clearSelectState() {\n          setNativeSelectValue('');\n          setInputValue('');\n          focusOnInput();\n        }}\n        disabled={restProps.disabled}\n        data-testid={clearButtonTestId}\n      />\n    );\n  }, [\n    clearButtonShown,\n    ClearButton,\n    iconProp,\n    restProps.disabled,\n    clearButtonTestId,\n    focusOnInput,\n  ]);\n\n  const icon = React.useMemo(() => {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return (\n      <DropdownIcon\n        className={clearButtonShown ? styles['CustomSelect__dropdown-icon'] : undefined}\n        opened={opened}\n      />\n    );\n  }, [clearButtonShown, iconProp, opened]);\n\n  const afterIcons = (icon || clearButtonShown) && (\n    <React.Fragment>\n      {clearButton}\n      {icon}\n    </React.Fragment>\n  );\n\n  const { document } = useDOM();\n  const passClickAndFocusToInputOnClick = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      // Раньше внешней оберткой CustomSelect был <label>, что позволяло по клику в любую область CustomSelect,\n      // даже где нету интерактивного элемента, фокусировать <input> и передавать на него событие клика.\n      // Так как мы больше не оборачиваем CustomSelect в <label>, то для обертки CustomSelect мы симулируем работу <label>.\n      // передаем фокус и клик по <input>, если пользователь кликнул в зоне обертки.\n      // В <label> мы не больше не оборачиваем, потому что это заставляет скринридер\n      // дважды произносить текст выбранной опции при фокусе, если CustomSelect связан с внешним <label>.\n      // Воспроизводится в некоторых версиях Chrome, при навигации по странице с помощью стрелок.\n      // Договорились со специалистом по доступности убрать <label>-обёртки из Select и CustomSelect\n\n      if (!selectInputRef.current || !document) {\n        return;\n      }\n\n      const clickTargetIsNotAnInput = e.target !== selectInputRef.current;\n      if (clickTargetIsNotAnInput) {\n        selectInputRef.current.click();\n\n        const inputIsNotFocused = document.activeElement !== selectInputRef.current;\n        if (inputIsNotFocused) {\n          focusOnInput();\n        }\n      }\n    },\n    [document, focusOnInput],\n  );\n\n  const preventInputBlurWhenClickInsideFocusedSelectArea = (\n    e: React.MouseEvent<HTMLDivElement>,\n  ) => {\n    // Так как инпут больше не оборачивается пустым лэйблом, то клик внутри обертки,\n    // но вне инпута (например по иконке дропдауна), будет убирать фокус с инпута.\n    // Чтобы в такой ситуации отключить blur инпута мы превентим mousedown событие обёртки\n    const isInputFocused = document && document.activeElement === selectInputRef.current;\n    if (isInputFocused) {\n      e.preventDefault();\n    }\n  };\n\n  const ariaActiveDescendantOptionIndex: undefined | number =\n    focusedOptionIndex !== -1 ? focusedOptionIndex : undefined;\n  const ariaActiveDescendantId =\n    ariaActiveDescendantOptionIndex !== undefined\n      ? options[ariaActiveDescendantOptionIndex] && options[ariaActiveDescendantOptionIndex].value\n      : null;\n\n  const selectInputAriaProps: React.HTMLAttributes<HTMLElement> = {\n    'role': 'combobox',\n    'aria-controls': popupAriaId,\n    'aria-owns': popupAriaId,\n    'aria-expanded': opened,\n    ['aria-activedescendant']:\n      ariaActiveDescendantId && opened ? `${popupAriaId}-${ariaActiveDescendantId}` : undefined,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-haspopup': 'listbox',\n    'aria-autocomplete': 'none',\n  };\n\n  const focusWithin = useFocusWithin(handleRootRef);\n\n  return (\n    <div\n      className={classNames(\n        styles['CustomSelect'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      ref={handleRootRef}\n      onClick={passClickAndFocusToInputOnClick}\n      onMouseDown={preventInputBlurWhenClickInsideFocusedSelectArea}\n    >\n      {focusWithin && selected && !opened && (\n        <VisuallyHidden aria-live=\"polite\">{selected.label}</VisuallyHidden>\n      )}\n      <CustomSelectInput\n        autoComplete=\"off\"\n        autoCapitalize=\"none\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        {...restProps}\n        {...selectInputAriaProps}\n        getRef={selectInputRef}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        className={openedClassNames}\n        readOnly={!searchable}\n        fetching={fetching}\n        value={inputValue}\n        onKeyUp={handleKeyUp}\n        onKeyDown={handleKeyDownSelect}\n        onChange={onInputChange}\n        onClick={onClick}\n        before={before}\n        after={afterIcons}\n        selectType={selectType}\n      >\n        {selected?.label}\n      </CustomSelectInput>\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n        data-testid={nativeSelectTestId}\n        required={required}\n      >\n        {allowClearButton && <option key=\"\" value=\"\" />}\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popupDirection}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          offsetDistance={dropdownOffsetDistance}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n          noMaxHeight={noMaxHeight}\n          role=\"listbox\"\n          id={popupAriaId}\n          aria-labelledby={ariaLabelledBy}\n          tabIndex={-1}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </div>\n  );\n}\n"],"names":["React","classNames","useAdaptivity","useExternRef","useFocusWithin","useId","SizeType","useDOM","defaultFilterFn","useIsomorphicLayoutEffect","debounce","warnOnce","CustomSelectDropdown","CustomSelectOption","DropdownIcon","Footnote","VisuallyHidden","CustomSelectClearButton","CustomSelectInput","styles","sizeYClassNames","none","COMPACT","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","checkOptionsValueType","Set","map","item","value","size","defaultRenderOptionFn","props","handleOptionDown","e","preventDefault","findSelectedIndex","withClear","Number","filter","inputValue","filterFn","defaultOptions","CustomSelect","opened","setOpened","useState","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChange","onInputChangeProp","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","selectType","autoHideScrollbar","autoHideScrollbarDelay","searchable","renderOption","renderOptionProp","optionsProp","emptyText","icon","iconProp","ClearButton","allowClearButton","dropdownOffsetDistance","fixDropdownWidth","noMaxHeight","ariaLabelledBy","clearButtonTestId","nativeSelectTestId","defaultValue","required","restProps","process","env","NODE_ENV","sizeY","containerRef","useRef","handleRootRef","scrollBoxRef","selectElRef","focusedOptionIndex","setFocusedOptionIndex","isControlledOutside","setIsControlledOutside","undefined","setInputValue","nativeSelectValue","setNativeSelectValue","popperPlacement","setPopperPlacement","setOptions","selectedOptionIndex","setSelectedOptionIndex","useEffect","some","event","Event","bubbles","current","dispatchEvent","selected","useMemo","openedClassNames","includes","scrollToElement","useCallback","index","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","scrollTo","isValidIndex","setScrollBoxRef","ref","keyboardInput","setKeyboardInput","resetKeyboardInput","resetFocusedOption","onKeyboardInput","key","fullInput","close","selectOption","shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync","selectFocused","open","onBlur","onFocus","onClick","handleKeyUp","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","onNativeSelectChange","newSelectedOptionIndex","currentTarget","target","areOptionsShown","handleKeyDownSelect","handleOptionClick","Array","prototype","indexOf","call","parentNode","prevMousePositionRef","x","y","focusOptionOnMouseMove","isMouseChangedPosition","Math","abs","clientX","clientY","popupAriaId","hovered","Fragment","label","onMouseDown","onMouseMove","id","resolvedContent","defaultDropdownContent","selectInputRef","focusOnInputTimerRef","focusOnInput","clearTimeout","setTimeout","focus","clearFocusOnInputTimer","controlledValueSet","uncontrolledValueSet","clearButtonShown","clearButton","clearSelectState","data-testid","afterIcons","document","passClickAndFocusToInputOnClick","clickTargetIsNotAnInput","click","inputIsNotFocused","activeElement","preventInputBlurWhenClickInsideFocusedSelectArea","isInputFocused","ariaActiveDescendantOptionIndex","ariaActiveDescendantId","selectInputAriaProps","focusWithin","div","REGULAR","aria-live","autoComplete","autoCapitalize","autoCorrect","spellCheck","readOnly","onKeyUp","onKeyDown","after","select","aria-hidden","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","sameWidth","forcePortal","role","aria-labelledby","tabIndex"],"mappings":"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"}