{"version":3,"sources":["../../../../src/components/CalendarHeader/CalendarHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon12Dropdown,\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { SizeType } from '../../lib/adaptivity';\nimport { getMonths, getYears } from '../../lib/calendar';\nimport { addMonths, setMonth, setYear, subMonths } from '../../lib/date';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { AdaptivityProvider } from '../AdaptivityProvider/AdaptivityProvider';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable, TappableElementProps } from '../Tappable/Tappable';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport styles from './CalendarHeader.module.css';\n\ntype ArrowMonthProps = Omit<TappableElementProps, 'onClick' | 'aria-label'>;\n\nexport interface CalendarHeaderProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'> {\n  viewDate: Date;\n  prevMonth?: boolean;\n  nextMonth?: boolean;\n  disablePickers?: boolean;\n  prevMonthAriaLabel?: string;\n  nextMonthAriaLabel?: string;\n  changeMonthAriaLabel?: string;\n  changeYearAriaLabel?: string;\n  prevMonthIcon?: React.ReactNode;\n  nextMonthIcon?: React.ReactNode;\n  prevMonthProps?: ArrowMonthProps;\n  nextMonthProps?: ArrowMonthProps;\n  onChange(viewDate: Date): void;\n  /**\n   * Нажатие на кнопку переключения на следующий месяц.\n   */\n  onNextMonth?(): void;\n  /**\n   * Нажатие на кнопку переключения на предыдущий месяц.\n   */\n  onPrevMonth?(): void;\n}\n\nexport const CalendarHeader = ({\n  viewDate,\n  onChange,\n  prevMonth = true,\n  nextMonth = true,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthProps = {},\n  nextMonthProps = {},\n  prevMonthAriaLabel = 'Предыдущий месяц',\n  nextMonthAriaLabel = 'Следующий месяц',\n  changeMonthAriaLabel = 'Изменить месяц',\n  changeYearAriaLabel = 'Изменить год',\n  prevMonthIcon = (\n    <Icon20ChevronLeftOutline\n      className={styles['CalendarHeader__nav-icon--accent']}\n      width={30}\n      height={30}\n    />\n  ),\n  nextMonthIcon = (\n    <Icon20ChevronRightOutline\n      className={styles['CalendarHeader__nav-icon--accent']}\n      width={30}\n      height={30}\n    />\n  ),\n  ...restProps\n}: CalendarHeaderProps) => {\n  const { locale } = useConfigProvider();\n  const onMonthsChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setMonth(viewDate, Number(event.target.value))),\n    [onChange, viewDate],\n  );\n  const onYearChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setYear(viewDate, Number(event.target.value))),\n    [onChange, viewDate],\n  );\n\n  const months = React.useMemo(\n    () =>\n      getMonths(locale).map(({ value, label }) => ({\n        value,\n        label: <span className={styles['CalendarHeader__month']}>{label}</span>,\n      })),\n    [locale],\n  );\n\n  const currentYear = viewDate.getFullYear();\n\n  const years = React.useMemo(() => getYears(currentYear, 100), [currentYear]);\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  const { className: prevMonthClassName, ...restPrevMonthProps } = prevMonthProps;\n  const { className: nextMonthClassName, ...restNextMonthProps } = nextMonthProps;\n\n  return (\n    <RootComponent baseClassName={styles['CalendarHeader']} {...restProps}>\n      {prevMonth && (\n        <AdaptivityProvider sizeX={SizeType.REGULAR}>\n          <Tappable\n            className={classNames(\n              styles['CalendarHeader__nav-icon'],\n              styles['CalendarHeader__nav-icon-prev'],\n              prevMonthClassName,\n            )}\n            onClick={onPrevMonth}\n            aria-label={`${prevMonthAriaLabel}, ${formatter.format(subMonths(viewDate, 1))}`}\n            {...restPrevMonthProps}\n          >\n            {prevMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n      {disablePickers ? (\n        <Paragraph\n          className={classNames(\n            styles['CalendarHeader__pickers'],\n            'vkuiInternalCalendarHeader__pickers',\n          )}\n          weight=\"2\"\n        >\n          <span className={styles['CalendarHeader__month']}>\n            {new Intl.DateTimeFormat(locale, {\n              month: 'long',\n            }).format(viewDate)}\n          </span>\n          &nbsp;\n          {new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n          }).format(viewDate)}\n        </Paragraph>\n      ) : (\n        <AdaptivityProvider sizeY={SizeType.COMPACT}>\n          <div\n            className={classNames(\n              styles['CalendarHeader__pickers'],\n              'vkuiInternalCalendarHeader__pickers',\n            )}\n          >\n            <CustomSelect\n              className={classNames(\n                styles['CalendarHeader__picker'],\n                'vkuiInternalCalendarHeader__picker',\n              )}\n              value={viewDate.getMonth()}\n              options={months}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              icon={<Icon12Dropdown />}\n              onChange={onMonthsChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeMonthAriaLabel}\n            />\n            <CustomSelect\n              className={classNames(\n                styles['CalendarHeader__picker'],\n                'vkuiInternalCalendarHeader__picker',\n              )}\n              value={viewDate.getFullYear()}\n              options={years}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              icon={<Icon12Dropdown />}\n              onChange={onYearChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeYearAriaLabel}\n            />\n          </div>\n        </AdaptivityProvider>\n      )}\n      {nextMonth && (\n        <AdaptivityProvider sizeX={SizeType.REGULAR}>\n          <Tappable\n            className={classNames(\n              styles['CalendarHeader__nav-icon'],\n              styles['CalendarHeader__nav-icon-next'],\n              nextMonthClassName,\n            )}\n            onClick={onNextMonth}\n            aria-label={`${nextMonthAriaLabel}, ${formatter.format(addMonths(viewDate, 1))}`}\n            {...restNextMonthProps}\n          >\n            {nextMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n    </RootComponent>\n  );\n};\n"],"names":["React","Icon12Dropdown","Icon20ChevronLeftOutline","Icon20ChevronRightOutline","classNames","SizeType","getMonths","getYears","addMonths","setMonth","setYear","subMonths","AdaptivityProvider","useConfigProvider","CustomSelect","RootComponent","Tappable","Paragraph","styles","CalendarHeader","viewDate","onChange","prevMonth","nextMonth","disablePickers","onNextMonth","onPrevMonth","prevMonthProps","nextMonthProps","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","prevMonthIcon","className","width","height","nextMonthIcon","restProps","locale","onMonthsChange","useCallback","event","Number","target","value","onYearChange","months","useMemo","map","label","span","currentYear","getFullYear","years","formatter","Intl","DateTimeFormat","year","month","prevMonthClassName","restPrevMonthProps","nextMonthClassName","restNextMonthProps","baseClassName","sizeX","REGULAR","onClick","aria-label","format","weight","sizeY","COMPACT","div","getMonth","options","dropdownOffsetDistance","fixDropdownWidth","icon","forceDropdownPortal","selectType"],"mappings":"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"}