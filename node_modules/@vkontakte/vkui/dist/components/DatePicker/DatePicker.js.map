{"version":3,"sources":["../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { leadingZero } from '@vkontakte/vkjs';\nimport { range } from '../../helpers/range';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { HasOnlyExpectedProps, HTMLAttributesWithRootRef } from '../../types';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { Input, type InputProps } from '../Input/Input';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'defaultValue' | 'min' | 'max'> {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({ day = 0, month = 0, year = 0 }: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <RootComponent baseClassName={styles['DatePicker']} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={convertToInputFormat({ day, month, year })} />\n    </RootComponent>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  monthNames,\n  popupDirection,\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  defaultValue,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const defProps =\n    day && month && year ? { defaultValue: convertToInputFormat({ day, month, year }) } : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  const inputProps: HasOnlyExpectedProps<typeof restProps, InputProps> = restProps;\n  return (\n    <Input\n      {...inputProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\nexport const DatePicker = ({ defaultValue, ...props }: DatePickerProps) => {\n  const hasPointer = useAdaptivityHasPointer();\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(() => ({\n    day: defaultValue?.day || 0,\n    month: defaultValue?.month || 0,\n    year: defaultValue?.year || 0,\n  }));\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props],\n  );\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n"],"names":["React","leadingZero","range","useAdaptivityHasPointer","CustomSelect","Input","RootComponent","DefaultMonths","convertToInputFormat","day","month","year","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","name","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","monthNames","onDateChange","disabled","restProps","onSelectChange","e","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","baseClassName","div","className","options","placeholder","onChange","input","type","DatePickerNative","defProps","onStringChange","useCallback","currentTarget","inputProps","DatePicker","props","hasPointer","useState","setValue","update","Cmp"],"mappings":"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"}