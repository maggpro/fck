{"version":3,"sources":["../../../src/components/ChipsSelect/ChipsSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useDOM } from '../../lib/dom';\nimport type { Placement } from '../../lib/floating';\nimport { defaultFilterFn } from '../../lib/select';\nimport { ChipOption, ChipValue, RenderChip } from '../Chip/Chip';\nimport { ChipsInputProps } from '../ChipsInput/ChipsInput';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport styles from './ChipsSelect.module.css';\n\nconst findIndexAfter = <O extends ChipOption>(options: O[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = <O extends ChipOption>(\n  options: O[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nexport interface ChipsSelectProps<Option extends ChipOption>\n  extends Omit<ChipsInputProps<Option>, 'after'> {\n  popupDirection?: 'top' | 'bottom';\n  options?: Option[];\n  filterFn?:\n    | false\n    | ((\n        value?: string,\n        option?: Option,\n        getOptionLabel?: Pick<ChipsInputProps<Option>, 'getOptionLabel'>['getOptionLabel'],\n      ) => boolean);\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (e: React.MouseEvent | React.KeyboardEvent, option: Option) => void;\n  /**\n   * Закрытие выпадающего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Добавляет значение в список на событие `onBlur` (использовать вместе с `creatable`)\n   */\n  addOnBlur?: boolean;\n  /**\n   * Отключает максимальную высоту по умолчанию\n   */\n  noMaxHeight?: boolean;\n}\n\ntype FocusActionType = 'next' | 'prev';\n\nconst FOCUS_ACTION_NEXT: FocusActionType = 'next';\nconst FOCUS_ACTION_PREV: FocusActionType = 'prev';\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption(props) {\n    return <CustomSelectOption {...props} />;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport const ChipsSelect = <Option extends ChipOption>(props: ChipsSelectProps<Option>) => {\n  const propsWithDefault = { ...chipsSelectDefaultProps, ...props };\n  const {\n    style,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    className,\n    fetching,\n    renderOption,\n    emptyText,\n    getRef,\n    getRootRef,\n    disabled,\n    placeholder,\n    tabIndex,\n    getOptionValue,\n    getOptionLabel,\n    showSelected,\n    getNewOptionData,\n    renderChip,\n    popupDirection,\n    creatable,\n    filterFn,\n    inputValue,\n    creatableText,\n    closeAfterSelect,\n    onChangeStart,\n    before,\n    icon,\n    options,\n    fixDropdownWidth,\n    forceDropdownPortal,\n    noMaxHeight = false,\n    ...restProps\n  } = propsWithDefault;\n\n  const { document } = useDOM();\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRootRef);\n  const {\n    fieldValue,\n    selectedOptions = [],\n    opened,\n    setOpened,\n    addOptionFromInput,\n    filteredOptions,\n    addOption,\n    handleInputChange,\n    clearInput,\n    focusedOption,\n    setFocusedOption,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n  } = useChipsSelect(propsWithDefault);\n\n  const showCreatable = Boolean(\n    creatable && creatableText && !filteredOptions.length && fieldValue,\n  );\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(null);\n    onFocus!(e);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    onBlur!(e);\n\n    // Не добавляем значение, если его нужно выбрать строго из списка\n    if (!e.defaultPrevented && !creatable) {\n      e.preventDefault();\n    }\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    const isClickOutsideFormField = !rootRef.current?.contains(e.target as Node);\n    const isClickOutsideDropdown = !scrollBoxRef.current?.contains(e.target as Node);\n\n    if (isClickOutsideFormField && isClickOutsideDropdown) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = React.useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number | null) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    const option = filteredOptions[index];\n\n    if (option?.disabled) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number | null, type: FocusActionType) => {\n    let index = nextIndex === null ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      const nextIndex = findIndexAfter(filteredOptions, index);\n      index = nextIndex === -1 ? findIndexAfter(filteredOptions) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === FOCUS_ACTION_PREV) {\n      const beforeIndex = findIndexBefore(filteredOptions, index);\n      index = beforeIndex === -1 ? findIndexBefore(filteredOptions) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    focusOptionByIndex(index, focusedOptionIndex);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown!(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        focusOption(null, FOCUS_ACTION_NEXT);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        focusOption(null, FOCUS_ACTION_NEXT);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened) {\n      if (focusedOptionIndex != null) {\n        const option = filteredOptions[focusedOptionIndex];\n\n        if (option) {\n          onChangeStart!(e, option);\n\n          if (!e.defaultPrevented) {\n            addOption(option);\n            setFocusedOptionIndex(null);\n            clearInput();\n            closeAfterSelect && setOpened(false);\n            e.preventDefault();\n          }\n        } else if (!creatable) {\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  const renderChipWrapper = (renderChipProps: RenderChip<Option> | undefined) => {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    const onRemoveWrapper = (e: React.MouseEvent | undefined, value: ChipValue | undefined) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      renderChipProps.onRemove?.(e, value);\n    };\n\n    return renderChip!({\n      ...renderChipProps,\n      onRemove: onRemoveWrapper,\n    });\n  };\n\n  const isPopperDirectionTop = popperPlacement?.includes('top');\n\n  const onPlacementChange = React.useCallback(\n    (placement?: Placement) => {\n      setPopperPlacement(placement);\n    },\n    [setPopperPlacement],\n  );\n\n  const onDropdownMouseLeave = React.useCallback(() => {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n\n  const toggleOpened = () => {\n    setOpened((prevOpened) => !prevOpened);\n  };\n\n  return (\n    <>\n      <FormField\n        getRootRef={rootRef}\n        style={style}\n        className={classNames(\n          styles['ChipsSelect'],\n          opened &&\n            (isPopperDirectionTop\n              ? styles['ChipsSelect--pop-up']\n              : styles['ChipsSelect--pop-down']),\n          className,\n        )}\n        disabled={disabled}\n        role=\"application\"\n        aria-disabled={disabled}\n        aria-readonly={restProps.readOnly}\n        after={\n          <IconButton\n            className={styles['ChipsSelect__dropdown']}\n            activeMode=\"\"\n            hoverMode=\"\"\n            // TODO [>=6]: add label customization\n            aria-label={opened ? 'Скрыть' : 'Развернуть'}\n            onClick={toggleOpened}\n          >\n            {icon ?? <DropdownIcon className={styles['ChipsSelect__icon']} opened={opened} />}\n          </IconButton>\n        }\n        before={before}\n      >\n        <ChipsInputBase\n          {...restProps}\n          tabIndex={tabIndex}\n          value={selectedOptions}\n          inputValue={fieldValue}\n          getNewOptionData={getNewOptionData}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          renderChip={renderChipWrapper}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          getRef={getRef}\n          disabled={disabled}\n          onInputChange={handleInputChange}\n        />\n      </FormField>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={rootRef}\n          placement={popupDirection}\n          scrollBoxRef={scrollBoxRef}\n          onPlacementChange={onPlacementChange}\n          onMouseLeave={onDropdownMouseLeave}\n          fetching={fetching}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          noMaxHeight={noMaxHeight}\n        >\n          {showCreatable && (\n            <CustomSelectOption\n              hovered={focusedOptionIndex === 0}\n              onMouseDown={addOptionFromInput}\n              onMouseEnter={() => setFocusedOptionIndex(0)}\n            >\n              {creatableText}\n            </CustomSelectOption>\n          )}\n          {!filteredOptions?.length && !showCreatable && emptyText ? (\n            <Footnote className={styles['ChipsSelect__empty']}>{emptyText}</Footnote>\n          ) : (\n            filteredOptions.map((option: Option, index: number) => {\n              const label = getOptionLabel!(option);\n              const hovered =\n                focusedOption && getOptionValue!(option) === getOptionValue!(focusedOption);\n              const selected = selectedOptions.find((selectedOption: Option) => {\n                return getOptionValue!(selectedOption) === getOptionValue!(option);\n              });\n              const value = getOptionValue!(option);\n\n              return (\n                <React.Fragment key={`${typeof value}-${value}`}>\n                  {renderOption!({\n                    option,\n                    hovered: Boolean(hovered),\n                    children: label,\n                    disabled: option.disabled,\n                    selected: !!selected,\n                    getRootRef: (e) => {\n                      if (e) {\n                        return (chipsSelectOptions[index] = e);\n                      }\n                      return undefined;\n                    },\n                    onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                      if (option.disabled) {\n                        return;\n                      }\n                      onChangeStart?.(e, option);\n\n                      if (!e.defaultPrevented) {\n                        closeAfterSelect && setOpened(false);\n                        addOption(option);\n                        clearInput();\n                      }\n                    },\n                    onMouseEnter: () => setFocusedOptionIndex(index),\n                  })}\n                </React.Fragment>\n              );\n            })\n          )}\n        </CustomSelectDropdown>\n      )}\n    </>\n  );\n};\n"],"names":["React","classNames","noop","useChipsSelect","useExternRef","useGlobalEventListener","useDOM","defaultFilterFn","ChipsInputBase","chipsInputDefaultProps","CustomSelectDropdown","CustomSelectOption","DropdownIcon","FormField","IconButton","Footnote","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","chipsSelectDefaultProps","emptyText","creatableText","onChangeStart","creatable","fetching","showSelected","closeAfterSelect","filterFn","renderOption","props","ChipsSelect","propsWithDefault","style","onFocus","onBlur","onKeyDown","className","getRef","getRootRef","placeholder","tabIndex","getOptionValue","getOptionLabel","getNewOptionData","renderChip","popupDirection","inputValue","before","icon","fixDropdownWidth","forceDropdownPortal","noMaxHeight","restProps","document","useState","undefined","popperPlacement","setPopperPlacement","scrollBoxRef","useRef","rootRef","fieldValue","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","handleFocus","e","handleBlur","defaultPrevented","preventDefault","handleClickOutside","isClickOutsideFormField","current","contains","target","isClickOutsideDropdown","chipsSelectOptions","scrollToElement","index","center","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","beforeIndex","handleKeyDown","key","includes","useEffect","renderChipWrapper","renderChipProps","onRemoveWrapper","value","stopPropagation","onRemove","isPopperDirectionTop","onPlacementChange","useCallback","placement","onDropdownMouseLeave","toggleOpened","prevOpened","role","aria-disabled","aria-readonly","readOnly","after","activeMode","hoverMode","aria-label","onClick","onInputChange","targetRef","onMouseLeave","sameWidth","forcePortal","hovered","onMouseDown","onMouseEnter","map","label","selected","find","selectedOption","Fragment","children"],"mappings":"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"}