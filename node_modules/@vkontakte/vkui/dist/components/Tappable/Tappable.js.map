{"version":3,"sources":["../../../src/components/Tappable/Tappable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport mitt from 'mitt';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useBooleanState } from '../../hooks/useBooleanState';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusVisible } from '../../hooks/useFocusVisible';\nimport {\n  type FocusVisibleModeProps,\n  useFocusVisibleClassName,\n} from '../../hooks/useFocusVisibleClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { shouldTriggerClickOnEnterOrSpace } from '../../lib/accessibility';\nimport { SizeType } from '../../lib/adaptivity';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { getOffsetRect } from '../../lib/offset';\nimport { Platform } from '../../lib/platform';\nimport { coordX, coordY } from '../../lib/touch';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport {\n  AnchorHTMLAttributesOnly,\n  HasChildren,\n  HasComponent,\n  HasRootRef,\n  LiteralUnion,\n} from '../../types';\nimport { Touch, TouchEvent, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport styles from './Tappable.module.css';\n\nconst sizeXClassNames = {\n  none: styles['Tappable--sizeX-none'],\n  compact: styles['Tappable--sizeX-compact'],\n};\n\nconst stylesHoverMode = {\n  background: styles['Tappable--hover-background'],\n  opacity: styles['Tappable--hover-opacity'],\n};\n\nconst stylesActiveMode = {\n  background: styles['Tappable--active-background'],\n  opacity: styles['Tappable--active-opacity'],\n};\n\ntype StateMode = 'opacity' | 'background';\n\nconst WAVE_LIVE = 225;\n\nexport type TappableElementProps = Omit<\n  React.AllHTMLAttributes<HTMLElement>,\n  | 'onTouchStart'\n  | 'onTouchMove'\n  | 'onTouchEnd'\n  | 'onTouchCancel'\n  | 'onMouseDown'\n  | 'onMouseMove'\n  | 'onMouseUp'\n  | 'onMouseLeave'\n> &\n  AnchorHTMLAttributesOnly; // В AllHTMLAttributes не хватает типов для ссылок\n\nexport interface TappableProps\n  extends TappableElementProps,\n    HasRootRef<HTMLElement>,\n    HasComponent,\n    HasChildren,\n    Pick<TouchProps, 'onStart' | 'onEnd' | 'onMove'>,\n    FocusVisibleModeProps {\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Позволяет управлять hovered-состоянием извне\n   */\n  hovered?: boolean;\n  /**\n   * Позволяет управлять activated-состоянием извне\n   */\n  activated?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: LiteralUnion<StateMode, string>;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: LiteralUnion<StateMode, string>;\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n  /**\n   * Задает border-radius элементу\n   * В режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`\n   */\n  borderRadiusMode?: 'auto' | 'inherit';\n}\n\ninterface Wave {\n  x: number;\n  y: number;\n  id: number;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: React.Ref<HTMLElement>;\n}\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nconst activeBus = mitt<{ active: string }>();\nconst TapState = { none: 0, pending: 1, active: 2, exiting: 3 } as const;\n\ntype TappableContextInterface = { onHoverChange: (s: boolean) => void };\nconst TappableContext = React.createContext<TappableContextInterface>({\n  onHoverChange: noop,\n});\n\nfunction isPresetStateMode(stateMode: LiteralUnion<StateMode, string>): stateMode is StateMode {\n  switch (stateMode) {\n    case 'opacity':\n    case 'background':\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction useActivity(hasActive: boolean, stopDelay: number) {\n  const id = React.useMemo(() => Math.round(Math.random() * 1e8).toString(16), []);\n\n  const [activity, setActivity] = React.useState<(typeof TapState)[keyof typeof TapState]>(\n    TapState.none,\n  );\n  const _stop = () => setActivity(TapState.none);\n  const start = () => hasActive && setActivity(TapState.active);\n  const delayStart = () => {\n    hasActive && setActivity(TapState.pending);\n  };\n\n  const activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  const stopTimeout = useTimeout(_stop, stopDelay);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit('active', id);\n    }\n    return noop;\n  }, [activity]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    const onActiveChange = (activeId: string) => {\n      activeId !== id && _stop();\n    };\n    activeBus.on('active', onActiveChange);\n    return () => activeBus.off('active', onActiveChange);\n  }, [activity === TapState.none]);\n\n  useIsomorphicLayoutEffect(() => {\n    !hasActive && _stop();\n  }, [hasActive]);\n\n  const stop = (delay?: number) => {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n\n  return [activity, { delayStart, start, stop }] as const;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tappable\n */\nexport const Tappable = ({\n  children,\n  Component,\n  onClick,\n  onKeyDown: _onKeyDown,\n  activeEffectDelay = ACTIVE_EFFECT_DELAY,\n  stopPropagation = false,\n  getRootRef,\n  hasHover: _hasHover = true,\n  hoverMode = 'background',\n  hasActive: _hasActive = true,\n  activeMode = 'background',\n  focusVisibleMode = 'inside',\n  onEnter,\n  onLeave,\n  className,\n  hovered: hoveredProp,\n  activated: activatedProp,\n  borderRadiusMode = 'auto',\n  ...props\n}: TappableProps) => {\n  Component = Component || ((props.href ? 'a' : 'div') as React.ElementType);\n\n  const { onHoverChange } = React.useContext(TappableContext);\n  const insideTouchRoot = React.useContext(TouchRootContext);\n  const platform = usePlatform();\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n  const { sizeX = 'none', hasHover: hasHoverContext = true } = useAdaptivity();\n  const hasPointerContext = useAdaptivityHasPointer();\n\n  const [clicks, setClicks] = React.useState<Wave[]>([]);\n  const [childHover, setChildHover] = React.useState(false);\n  const {\n    value: _hovered,\n    setTrue: setHoveredTrue,\n    setFalse: setHoveredFalse,\n  } = useBooleanState(false);\n\n  const hovered = (_hovered || hoveredProp) && !props.disabled;\n  const hasActive = _hasActive && !childHover && !props.disabled;\n  const hasHover = hasHoverContext && _hasHover && !childHover;\n  const isCustomElement =\n    Component !== 'a' && Component !== 'button' && Component !== 'label' && !props.contentEditable;\n  const isPresetHoverMode = isPresetStateMode(hoverMode);\n  const isPresetActiveMode = isPresetStateMode(activeMode);\n\n  const [activity, { start, stop, delayStart }] = useActivity(hasActive, activeEffectDelay);\n  const active = activity === TapState.active || activity === TapState.exiting;\n  const activated = (active || activatedProp) && !props.disabled;\n\n  const containerRef = useExternRef(getRootRef);\n\n  // hover propagation\n  const childContext = React.useRef({ onHoverChange: setChildHover }).current;\n  useIsomorphicLayoutEffect(() => {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return () => onHoverChange(false);\n  }, [hovered]);\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  function onKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      containerRef.current?.click();\n    }\n  }\n\n  const needWaves =\n    platform === Platform.ANDROID && !hasPointerContext && hasActive && activeMode === 'background';\n\n  const clearClicks = useTimeout(() => setClicks([]), WAVE_LIVE);\n\n  function addClick(x: number, y: number) {\n    const dateNow = Date.now();\n    const filteredClicks = clicks.filter((click) => click.id + WAVE_LIVE > dateNow);\n\n    setClicks([...filteredClicks, { x, y, id: dateNow }]);\n    clearClicks.set();\n  }\n\n  function onStart({ originalEvent }: TouchEvent) {\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n\n      if (needWaves) {\n        const { top, left } = getOffsetRect(containerRef.current);\n        const x = coordX(originalEvent) - (left ?? 0);\n        const y = coordY(originalEvent) - (top ?? 0);\n        addClick(x, y);\n      }\n\n      delayStart();\n    }\n  }\n\n  function onMove({ isSlide }: TouchEvent) {\n    if (isSlide) {\n      stop();\n    }\n  }\n\n  function onEnd({ duration }: TouchEvent) {\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    }\n\n    // отключить без задержки при длинном тапе\n    const activeDuration = duration - ACTIVE_DELAY;\n    stop(activeDuration >= 100 ? 0 : activeEffectDelay - activeDuration);\n  }\n\n  const focusVisibleClassNames = useFocusVisibleClassName({\n    focusVisible: !props.disabled && focusVisible,\n    mode: focusVisibleMode,\n  });\n\n  const classes = classNames(\n    className,\n    styles['Tappable'],\n    'vkuiInternalTappable',\n    platform === Platform.IOS && styles['Tappable--ios'],\n    sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX],\n    hasHover && styles['Tappable--hasHover'],\n    hasActive && styles['Tappable--hasActive'],\n    hasHover && hovered && !isPresetHoverMode && hoverMode,\n    hasActive && activated && !isPresetActiveMode && activeMode,\n    hasHover && hovered && isPresetHoverMode && stylesHoverMode[hoverMode],\n    hasActive && activated && isPresetActiveMode && stylesActiveMode[activeMode],\n    borderRadiusMode === 'inherit' && styles['Tappable--borderRadiusInherit'],\n    focusVisibleClassNames,\n  );\n\n  const handlers: RootComponentProps = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown),\n  };\n  const role = props.href ? 'link' : 'button';\n\n  return (\n    <Touch\n      onEnter={callMultiple(setHoveredTrue, onEnter)}\n      onLeave={callMultiple(setHoveredFalse, onLeave)}\n      type={Component === 'button' ? 'button' : undefined}\n      tabIndex={isCustomElement && !props.disabled ? 0 : undefined}\n      role={isCustomElement ? role : undefined}\n      aria-disabled={isCustomElement ? props.disabled : undefined}\n      stopPropagation={stopPropagation && !insideTouchRoot && !props.disabled}\n      {...props}\n      slideThreshold={20}\n      usePointerHover\n      className={classes}\n      Component={Component}\n      getRootRef={containerRef}\n      onBlur={callMultiple(onBlur, props.onBlur)}\n      onFocus={callMultiple(onFocus, props.onFocus)}\n      {...(props.disabled ? {} : handlers)}\n    >\n      <TappableContext.Provider value={childContext}>{children}</TappableContext.Provider>\n      {needWaves && (\n        <span aria-hidden className={styles.Tappable__waves}>\n          {clicks.map((wave) => (\n            <span\n              key={wave.id}\n              className={styles.Tappable__wave}\n              style={{ top: wave.y, left: wave.x }}\n            />\n          ))}\n        </span>\n      )}\n      {((hasHover && hoverMode === 'background') || (hasActive && activeMode === 'background')) && (\n        <span aria-hidden className={styles.Tappable__stateLayer} />\n      )}\n    </Touch>\n  );\n};\n"],"names":["React","classNames","noop","mitt","useAdaptivity","useAdaptivityHasPointer","useBooleanState","useExternRef","useFocusVisible","useFocusVisibleClassName","usePlatform","useTimeout","shouldTriggerClickOnEnterOrSpace","SizeType","callMultiple","getOffsetRect","Platform","coordX","coordY","useIsomorphicLayoutEffect","Touch","TouchRootContext","sizeXClassNames","none","compact","stylesHoverMode","background","opacity","stylesActiveMode","WAVE_LIVE","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","activeBus","TapState","pending","active","exiting","TappableContext","createContext","onHoverChange","isPresetStateMode","stateMode","useActivity","hasActive","stopDelay","id","useMemo","Math","round","random","toString","useState","activity","setActivity","_stop","start","delayStart","activeTimeout","stopTimeout","set","clear","emit","onActiveChange","activeId","on","off","stop","delay","Tappable","onKeyDown","e","isCustomElement","containerRef","preventDefault","current","click","addClick","x","y","dateNow","Date","now","filteredClicks","clicks","filter","setClicks","clearClicks","onStart","originalEvent","touches","length","needWaves","top","left","onMove","isSlide","onEnd","duration","activeDuration","activeEffectDelay","children","Component","onClick","_onKeyDown","stopPropagation","getRootRef","_hasHover","hasHover","hoverMode","_hasActive","activeMode","focusVisibleMode","onEnter","onLeave","className","hovered","hoveredProp","activated","activatedProp","borderRadiusMode","props","href","useContext","insideTouchRoot","platform","focusVisible","onBlur","onFocus","sizeX","hasHoverContext","hasPointerContext","childHover","setChildHover","value","_hovered","setTrue","setHoveredTrue","setFalse","setHoveredFalse","disabled","contentEditable","isPresetHoverMode","isPresetActiveMode","childContext","useRef","ANDROID","focusVisibleClassNames","mode","classes","IOS","REGULAR","handlers","role","type","undefined","tabIndex","aria-disabled","slideThreshold","usePointerHover","Provider","span","aria-hidden","map","wave","key","style"],"mappings":"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"}