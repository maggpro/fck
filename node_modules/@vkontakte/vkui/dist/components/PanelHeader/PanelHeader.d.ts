import * as React from 'react';
import { HasComponent, HasDataAttribute, HasRef, HTMLAttributesWithRootRef } from '../../types';
export interface PanelHeaderProps extends HTMLAttributesWithRootRef<HTMLDivElement>, HasRef<HTMLDivElement> {
    before?: React.ReactNode;
    /**
     * Добавляет элемент справа.
     *
     * При передаче нескольких элементов, расставляет отступы между ними.
     */
    after?: React.ReactNode;
    separator?: boolean;
    transparent?: boolean;
    shadow?: boolean;
    /**
     * Если `false`, то шапка будет нулевой высоты и контент панели "залезет" под неё
     */
    visor?: boolean;
    /**
     * Если `false`, то шапка будет в потоке. По умолчанию `true`, но если платформа vkcom, то по умолчанию `false`.
     */
    fixed?: boolean;
    /**
     * По умолчанию как `Component` используется `span`.
     */
    typographyProps?: HasComponent & React.HTMLAttributes<HTMLElement> & HasDataAttribute;
}
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeader
 */
export declare const PanelHeader: {
    ({ before, children, after, separator, visor, transparent, shadow, getRef, getRootRef, fixed, typographyProps, ...restProps }: PanelHeaderProps): React.JSX.Element;
    Content: {
        ({ children, Component, id, }: import("./LegacyPanelHeaderContent").LegacyPanelHeaderContentProps): React.JSX.Element;
        displayName: string;
    };
};
//# sourceMappingURL=PanelHeader.d.ts.map