{"version":3,"sources":["../../../src/components/TooltipBase/TooltipBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { HasRootRef } from '../../types';\nimport { DefaultIcon } from '../PopperArrow/DefaultIcon';\nimport { PopperArrow, type PopperArrowProps } from '../PopperArrow/PopperArrow';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport styles from './TooltipBase.module.css';\n\nexport const TOOLTIP_MAX_WIDTH = 220;\n\nconst stylesAppearance = {\n  accent: styles['TooltipBase--appearance-accent'],\n  white: styles['TooltipBase--appearance-white'],\n  black: styles['TooltipBase--appearance-black'],\n  inversion: styles['TooltipBase--appearance-inversion'],\n};\n\nexport interface TooltipBaseProps extends HasRootRef<HTMLDivElement> {\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n  /**\n   * Текст тултипа.\n   */\n  text?: React.ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: React.ReactNode;\n  /**\n   * Отображать ли стрелку, указывающую на якорный элемент\n   */\n  withArrow?: boolean;\n  arrowCoords?: PopperArrowProps['coords'];\n  arrowPlacement?: PopperArrowProps['placement'];\n  getArrowRef?: PopperArrowProps['getRootRef'];\n  /**\n   * Пользовательская SVG иконка.\n   *\n   * Требования:\n   *\n   * 1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n   * 2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   *    растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   *    (см. https://github.com/VKCOM/VKUI/pull/4496).\n   * 3. Убедитесь, что компонент принимает все валидные для SVG параметры.\n   * 4. Убедитесь, что SVG и её элементы наследует цвет через `fill=\"currentColor\"`.\n   * 5. Если стрелка наезжает на якорный элемент, то увеличьте значение параметра `offsetY`.\n   */\n  ArrowIcon?: PopperArrowProps['Icon'];\n  /**\n   * Пользовательские css-классы, будут добавлены на root-элемент\n   */\n  className?: string;\n  /**\n   * Перебивает максимальную ширину заданную по умолчанию.\n   *\n   * Передача `null` полностью сбрасывает установку `max-width` на элемент.\n   */\n  maxWidth?: number | string | null;\n  floatingStyle?: React.CSSProperties;\n}\n\n/**\n * Низкоуровневый компонент для отрисовки тултипа.\n * Примеры использования и Readme можно найти в документации Tooltip\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\nexport const TooltipBase = ({\n  appearance = 'accent',\n  withArrow = true,\n  arrowCoords,\n  arrowPlacement = 'top',\n  getArrowRef,\n  getRootRef,\n  floatingStyle,\n  ArrowIcon = DefaultIcon,\n  text,\n  header,\n  maxWidth = TOOLTIP_MAX_WIDTH,\n  ...restProps\n}: TooltipBaseProps) => {\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['TooltipBase'],\n        appearance !== 'neutral' && stylesAppearance[appearance],\n      )}\n    >\n      <div ref={getRootRef} style={floatingStyle}>\n        {withArrow && (\n          <PopperArrow\n            coords={arrowCoords}\n            placement={arrowPlacement}\n            arrowClassName={styles['TooltipBase__arrow']}\n            getRootRef={getArrowRef}\n            Icon={ArrowIcon}\n          />\n        )}\n        <div\n          className={styles['TooltipBase__content']}\n          style={maxWidth !== null ? { maxWidth } : undefined}\n        >\n          {header && <Subhead weight=\"2\">{header}</Subhead>}\n          {text && <Subhead>{text}</Subhead>}\n        </div>\n      </div>\n    </RootComponent>\n  );\n};\n"],"names":["React","classNames","DefaultIcon","PopperArrow","RootComponent","Subhead","TOOLTIP_MAX_WIDTH","stylesAppearance","accent","white","black","inversion","TooltipBase","appearance","withArrow","arrowCoords","arrowPlacement","getArrowRef","getRootRef","floatingStyle","ArrowIcon","text","header","maxWidth","restProps","baseClassName","div","ref","style","coords","placement","arrowClassName","Icon","className","undefined","weight"],"mappings":";;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,WAAW,QAA+B,6BAA6B;AAChF,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,OAAO,QAAQ,gCAAgC;AAGxD,OAAO,IAAMC,oBAAoB,IAAI;AAErC,IAAMC,mBAAmB;IACvBC,MAAM;IACNC,KAAK;IACLC,KAAK;IACLC,SAAS;AACX;AAiDA;;;;CAIC,GACD,OAAO,IAAMC,cAAc;mCACzBC,YAAAA,4CAAa,wDACbC,WAAAA,0CAAY,yBACZC,qBAAAA,4CACAC,gBAAAA,oDAAiB,+BACjBC,qBAAAA,aACAC,oBAAAA,YACAC,uBAAAA,yCACAC,WAAAA,0CAAYlB,gCACZmB,cAAAA,MACAC,gBAAAA,iCACAC,UAAAA,wCAAWjB,qCACRkB;QAXHX;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,qBACE,oBAACnB,uDACKoB;QACJC,eAAexB,8BAEbY,eAAe,aAAaN,gBAAgB,CAACM,WAAW;sBAG1D,oBAACa;QAAIC,KAAKT;QAAYU,OAAOT;OAC1BL,2BACC,oBAACX;QACC0B,QAAQd;QACRe,WAAWd;QACXe,cAAc;QACdb,YAAYD;QACZe,MAAMZ;sBAGV,oBAACM;QACCO,SAAS;QACTL,OAAOL,aAAa,OAAO;YAAEA,UAAAA;QAAS,IAAIW;OAEzCZ,wBAAU,oBAACjB;QAAQ8B,QAAO;OAAKb,SAC/BD,sBAAQ,oBAAChB,eAASgB;AAK7B,EAAE"}