{"version":3,"sources":["../../src/hooks/usePagination.ts"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '../helpers/math';\nimport { rangeIncrement } from '../helpers/range';\n\ninterface UsePaginationProps {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n}\n\nexport type PaginationPageType = 'start-ellipsis' | 'end-ellipsis' | number;\n\nexport type UsePaginationResult = PaginationPageType[];\n\n/**\n * Хук позаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport const usePagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages: endPage = 1,\n}: UsePaginationProps = {}): UsePaginationResult =>\n  React.useMemo(() => {\n    const startPages = rangeIncrement(1, Math.min(boundaryCount, endPage));\n    const endPages = rangeIncrement(\n      Math.max(endPage - boundaryCount + 1, boundaryCount + 1),\n      endPage,\n    );\n\n    const lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    const siblingsStart = clamp(\n      currentPage - siblingCount,\n      boundaryCount + 2,\n      lowerBoundaryWhenCurrentPageHigh,\n    );\n\n    const upperBoundaryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    const siblingsEnd = Math.min(\n      Math.max(currentPage + siblingCount, upperBoundaryWhenCurrentPageLow),\n      endPages.length > 0 ? endPages[0] - 2 : endPage - 1,\n    );\n\n    const pages: UsePaginationResult = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push('start-ellipsis');\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push(...rangeIncrement(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push('end-ellipsis');\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push(...endPages);\n\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n"],"names":["React","clamp","rangeIncrement","usePagination","currentPage","siblingCount","boundaryCount","endPage","totalPages","useMemo","pages","startPages","Math","min","endPages","max","lowerBoundaryWhenCurrentPageHigh","siblingsStart","upperBoundaryWhenCurrentPageLow","siblingsEnd","length","push"],"mappings":";AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,cAAc,QAAQ,mBAAmB;AAyBlD;;;;;;;;;;;CAWC,GACD,OAAO,IAAMC,gBAAgB;gFAKL,CAAC,2BAJvBC,aAAAA,4CAAc,+CACdC,cAAAA,8CAAe,iDACfC,eAAAA,gDAAgB,wBACJC,WAAZC,YAAYD,UAAAA,iBAAU,IAAVA;WAEZP,MAAMS,OAAO,CAAC;YA4BZC,QAQAA;QAnCA,IAAMC,aAAaT,eAAe,GAAGU,KAAKC,GAAG,CAACP,eAAeC;QAC7D,IAAMO,WAAWZ,eACfU,KAAKG,GAAG,CAACR,UAAUD,gBAAgB,GAAGA,gBAAgB,IACtDC;QAGF,IAAMS,mCAAmCT,UAAUD,gBAAgB,IAAI,IAAID;QAC3E,IAAMY,gBAAgBhB,MACpBG,cAAcC,cACdC,gBAAgB,GAChBU;QAGF,IAAME,kCAAkCZ,gBAAgB,IAAI,IAAID;QAChE,IAAMc,cAAcP,KAAKC,GAAG,CAC1BD,KAAKG,GAAG,CAACX,cAAcC,cAAca,kCACrCJ,SAASM,MAAM,GAAG,IAAIN,QAAQ,CAAC,EAAE,GAAG,IAAIP,UAAU;QAGpD,IAAMG,QAA6BC;QAEnC,IAAIM,gBAAgBX,gBAAgB,GAAG;YACrCI,MAAMW,IAAI,CAAC;QACb,OAAO,IAAIf,gBAAgB,IAAIC,UAAUD,eAAe;YACtDI,MAAMW,IAAI,CAACf,gBAAgB;QAC7B;QAEAI,CAAAA,SAAAA,OAAMW,IAAI,CAAVX,MAAAA,QAAW,qBAAGR,eAAee,eAAeE;QAE5C,IAAIA,cAAcZ,UAAUD,gBAAgB,GAAG;YAC7CI,MAAMW,IAAI,CAAC;QACb,OAAO,IAAId,UAAUD,gBAAgBA,eAAe;YAClDI,MAAMW,IAAI,CAACd,UAAUD;QACvB;QAEAI,CAAAA,UAAAA,OAAMW,IAAI,CAAVX,MAAAA,SAAW,qBAAGI;QAEd,OAAOJ;IACT,GAAG;QAACN;QAAaG;QAASF;QAAcC;KAAc;EAAE"}