{"version":3,"sources":["../../src/hooks/useFocusWithin.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport function useFocusWithin(ref: React.RefObject<HTMLElement | null>): boolean {\n  const { document } = useDOM();\n  const isFocusWithin = () => {\n    if (!ref.current || !document) {\n      return false;\n    }\n\n    return ref.current.contains(document.activeElement);\n  };\n\n  const [focusWithin, setFocusWithin] = React.useState<boolean>(isFocusWithin);\n\n  const listener = () => {\n    const focus = isFocusWithin();\n    focus !== focusWithin && setFocusWithin(focus);\n  };\n\n  // Проверяем autoFocus\n  useIsomorphicLayoutEffect(listener, []);\n\n  useGlobalEventListener(document, 'focus', listener, { capture: true });\n  useGlobalEventListener(document, 'blur', listener, { capture: true });\n\n  return focusWithin;\n}\n"],"names":["React","useDOM","useIsomorphicLayoutEffect","useGlobalEventListener","useFocusWithin","ref","document","isFocusWithin","current","contains","activeElement","useState","focusWithin","setFocusWithin","listener","focus","capture"],"mappings":";AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,sBAAsB,QAAQ,2BAA2B;AAElE,OAAO,SAASC,eAAeC,GAAwC;IACrE,IAAM,AAAEC,WAAaL,SAAbK;IACR,IAAMC,gBAAgB;QACpB,IAAI,CAACF,IAAIG,OAAO,IAAI,CAACF,UAAU;YAC7B,OAAO;QACT;QAEA,OAAOD,IAAIG,OAAO,CAACC,QAAQ,CAACH,SAASI,aAAa;IACpD;IAEA,IAAsCV,mCAAAA,MAAMW,QAAQ,CAAUJ,oBAAvDK,cAA+BZ,oBAAlBa,iBAAkBb;IAEtC,IAAMc,WAAW;QACf,IAAMC,QAAQR;QACdQ,UAAUH,eAAeC,eAAeE;IAC1C;IAEA,sBAAsB;IACtBb,0BAA0BY,UAAU,EAAE;IAEtCX,uBAAuBG,UAAU,SAASQ,UAAU;QAAEE,SAAS;IAAK;IACpEb,uBAAuBG,UAAU,QAAQQ,UAAU;QAAEE,SAAS;IAAK;IAEnE,OAAOJ;AACT"}